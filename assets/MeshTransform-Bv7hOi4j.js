import{c8 as c,bu as u,cr as p,cs as h,ct as x,cu as y,cv as a,cw as n,cx as A,cy as i,cz as b,cA as g,cB as m,cC as N,cD as v,cE as M,b as r,m as s,c as w}from"./index-CzvLtnX1.js";var e;let o=e=class extends c{constructor(t){super(t),this.translation=u(),this.rotationAxis=p(h),this.rotationAngle=0,this.scale=x(1,1,1)}get rotation(){return y(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=a(n(t)),this.rotationAngle=A(t)}get localMatrix(){const t=i();return b(l,n(this.rotation),g(this.rotation)),m(t,l,this.translation,this.scale),t}get localMatrixInverse(){return N(i(),this.localMatrix)}equals(t){return this===t||t!=null&&v(this.localMatrix,t.localMatrix)}clone(){const t={translation:a(this.translation),rotationAxis:a(this.rotationAxis),rotationAngle:this.rotationAngle,scale:a(this.scale)};return new e(t)}};r([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"translation",void 0),r([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAxis",void 0),r([s({type:Number,nonNullable:!0,json:{write:!0}})],o.prototype,"rotationAngle",void 0),r([s({type:[Number],nonNullable:!0,json:{write:!0}})],o.prototype,"scale",void 0),r([s()],o.prototype,"rotation",null),r([s()],o.prototype,"localMatrix",null),r([s()],o.prototype,"localMatrixInverse",null),o=e=r([w("esri.geometry.support.MeshTransform")],o);const l=M(),$=o;export{$ as N};
