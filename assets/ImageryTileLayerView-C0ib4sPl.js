import{b as a,m as n,c as F,H as S,aC as j}from"./index-CzvLtnX1.js";import{V as O,t as s,n as P}from"./rasterFieldUtils-B7rAGycz.js";import{i as $}from"./timeSupport-CgS5mQjm.js";import{_ as L,x as v,O as _}from"./rasterProjectionHelper-B6RYh9HO.js";import{p as A}from"./popupUtils-C5Xxoh_A.js";const k=E=>{let t=class extends E{constructor(){super(...arguments),this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){return $(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?L(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(o){try{return!this.layer.loaded||!!v(this.layer.serviceRasterInfo,o)}catch{return!1}}async fetchPopupFeaturesAtLocation(o,f){const{layer:e}=this;if(!o)throw new S("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:e});const{popupEnabled:w}=e,b=A(e,f);if(!w||b==null)return[];const m=[],{value:u,magdirValue:p,processedValue:R}=await e.identify(o,{timeExtent:this.timeExtent,signal:f?.signal});let y="";if(u?.length){y=e.type==="imagery-tile"&&e.hasStandardTime()&&u[0]!=null?u.map(l=>e.getStandardTimeValue(l)).join(", "):u.join(", ");const r={ObjectId:0};r[s.servicePixelValue]=e.type==="imagery-tile"&&e.raster.datasetFormat==="Function"?R?.join(", "):y,r[s.rawServicePixelValue]=y;const d=e.raster?.rasterInfo??e.serviceRasterInfo,h=d?.attributeTable;if(h!=null){const{fields:l,features:I}=h,x=l.find(({name:i})=>i.toLowerCase()==="value"),V=r[s.servicePixelValue],c=x?I.find(i=>String(i.attributes[x.name])===V):null;if(c)for(const i in c.attributes)c.attributes.hasOwnProperty(i)&&(r[P+i]=c.attributes[i])}const g=d?.dataType;if(g!=="vector-magdir"&&g!=="vector-uv"||(r[s.magnitude]=p?.[0],r[s.direction]=p?.[1]),e.type==="imagery-tile"){const{multidimensionalDefinition:l}=this.layer.normalizeRasterFetchOptions({timeExtent:this.timeExtent});O(e.rasterFields,r,l)}const T=new j({geometry:this.fullExtent?.clone(),attributes:r,layer:e,sourceLayer:e});m.push(T)}return m}async getSourceScale(){return await this.layer.load(),_(this.layer.serviceRasterInfo,this.view.spatialReference)}_getFullExtent(){return v(this.layer.serviceRasterInfo,this.view.spatialReference)}};return a([n()],t.prototype,"fullExtent",null),a([n()],t.prototype,"layer",void 0),a([n({readOnly:!0})],t.prototype,"timeExtent",null),a([n()],t.prototype,"tileInfo",void 0),a([n({readOnly:!0})],t.prototype,"hasTilingEffects",null),a([n()],t.prototype,"datumTransformation",null),t=a([F("esri.views.layers.ImageryTileLayerView")],t),t};export{k as y};
