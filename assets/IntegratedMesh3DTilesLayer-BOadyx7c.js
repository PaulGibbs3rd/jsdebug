import{C as V,D as j,F as U,a8 as X,S as P,ab as F,aa as W,ao as b,ah as A,iv as $,ct as x,f$ as k,g6 as y,iw as _,by as I,hZ as E,ix as L,iy as T,iz as R,bu as g,gv as f,H as G,J as D,K,iA as N,iB as q,aA as z,iC as C,O,b as d,m,iD as Z,T as B,c as H}from"./index-CfYeSufM.js";let p=class extends V(j(U(X(P(F(W(O))))))){constructor(a){super(a),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new b({wkid:4326,vcsWkid:115700}),this.fullExtent=new A(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(a){a!=null&&a.mode!=="absolute-height"||this._set("elevationInfo",a),this._validateElevationInfo(a)}_verifyArray(a,i){if(!Array.isArray(a)||a.length<i)return!1;for(const o of a)if(typeof o!="number")return!1;return!0}_initFullExtent(a){var M,S;const i=(M=a.root)==null?void 0:M.boundingVolume;if(!i)return;if(i.box){const t=i==null?void 0:i.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=(S=a.root)==null?void 0:S.transform,u=g();if(i.region&&this._verifyArray(i.region,6)){const t=i.region,l=$(t[0]),n=$(t[1]),s=t[4],r=$(t[2]),e=$(t[3]),h=t[5];this.fullExtent=new A({xmin:l,ymin:n,zmin:s,xmax:r,ymax:e,zmax:h,spatialReference:this.spatialReference})}else if(i.sphere&&this._verifyArray(i.sphere,4)){const t=i.sphere,l=x(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),s=g();k(s,l,x(n,n,n));const r=g();if(y(r,l,x(n,n,n)),o&&this._verifyArray(o,16)){const v=o;_(u,s,v),I(s,u),_(u,r,v),I(r,u)}E(s,L,0,s,b.WGS84,0),E(r,L,0,r,b.WGS84,0);const e=g(),h=g();T(e,s,r),R(h,s,r),this.fullExtent=new A({xmin:e[0],ymin:e[1],zmin:e[2],xmax:h[0],ymax:h[1],zmax:h[2],spatialReference:this.spatialReference})}else if(i.box&&this._verifyArray(i.box,12)){const t=i.box,l=x(t[0],t[1],t[2]),n=x(t[3],t[4],t[5]),s=x(t[6],t[7],t[8]),r=x(t[9],t[10],t[11]),e=[];for(let c=0;c<8;++c)e.push(g());if(y(e[0],l,n),y(e[0],e[0],s),y(e[0],e[0],r),f(e[1],l,n),y(e[1],e[1],s),y(e[1],e[1],r),y(e[2],l,n),f(e[2],e[2],s),y(e[2],e[2],r),f(e[3],l,n),f(e[3],e[3],s),y(e[3],e[3],r),y(e[4],l,n),y(e[4],e[4],s),f(e[4],e[4],r),f(e[5],l,n),y(e[5],e[5],s),f(e[5],e[5],r),y(e[6],l,n),f(e[6],e[6],s),f(e[6],e[6],r),f(e[7],l,n),f(e[7],e[7],s),f(e[7],e[7],r),o&&this._verifyArray(o,16)){const c=o;for(let w=0;w<8;++w)_(e[w],e[w],c)}const h=x(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),v=x(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let c=0;c<8;++c)E(e[c],L,0,e[c],b.WGS84,0),T(v,v,e[c]),R(h,h,e[c]);this.fullExtent=new A({xmin:v[0],ymin:v[1],zmin:v[2],xmax:h[0],ymax:h[1],zmax:h[2],spatialReference:this.spatialReference})}}async load(a){return this.addResolvingPromise(this._doLoad(a)),this}async _doLoad(a){const i=a!=null?a.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{var u;if((u=o.typeKeywords)!=null&&u.includes("IntegratedMesh"))return!0;throw new G("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},a)}catch(o){D(o)}this.url&&await K(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then(u=>{this._initFullExtent(u.data)},u=>{D(u)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(a){const i="Integrated mesh 3d tiles layers";N(z.getLogger(this),q(i,"absolute-height",a)),N(z.getLogger(this),C(i,a))}};d([m({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),d([m({type:b})],p.prototype,"spatialReference",void 0),d([m({type:A})],p.prototype,"fullExtent",void 0),d([m(Z)],p.prototype,"elevationInfo",null),d([m({type:["show","hide"]})],p.prototype,"listMode",void 0),d([m(B)],p.prototype,"url",void 0),d([m({readOnly:!0})],p.prototype,"type",void 0),d([m({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),d([m({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"minScale",void 0),d([m({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],p.prototype,"maxScale",void 0),p=d([H("esri.layers.IntegratedMesh3DTilesLayer")],p);const Q=p;export{Q as default};
