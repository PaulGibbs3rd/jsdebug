import{c as $,a as g}from"./devEnvironmentUtils-8WtPGj6h.js";import{bc as N,ap as u,H as c,e0 as j,e1 as d,e2 as U,e3 as D,e4 as v,e5 as F,e6 as x,e7 as S,e8 as w,e9 as A,ea as C,eb as H}from"./index-CzvLtnX1.js";function z(t,e,a){const l=t.name;return l==null?Promise.reject(new c("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):t.styleName==="Esri2DPointSymbolsStyle"?W(l,e,a):A(t,e,a).then(s=>R(s,l,e,C,a))}function M(t,e){return e.items.find(a=>a.name===t)}async function R(t,e,a,l,s){const o=a?.portal!=null?a.portal:N.getDefault(),r={portal:o,url:u(t.baseUrl)},m=M(e,t.data);if(!m)throw new c("symbolstyleutils:symbol-name-not-found",`The symbol name '${e}' could not be found`,{symbolName:e});const b=s?.acceptedFormats??j,p=l(m,b);if(!p)throw new c("symbolstyleutils:symbol-reference-no-accepted-format",`The symbol name '${e}' does not have an accepted format (one of ${b})`,{symbolName:e});const{url:O,format:P}=p;let i=d(O,r),y=m.thumbnail?.href??null;const f=m.thumbnail?.imageData;$()&&(i=g(i)??"",y=g(y));const T={portal:o,url:u(U(i)),origin:"portal-item"};return D(i,s).then(h=>{const E=P==="cim"?v(h.data):h.data,n=F(E,T);if(n&&x(n)){if(y){const I=d(y,r);n.thumbnail=new S({url:I})}else f&&(n.thumbnail=new S({url:`data:image/png;base64,${f}`}));t.styleUrl?n.styleOrigin=new w({portal:a.portal,styleUrl:t.styleUrl,name:e}):t.styleName&&(n.styleOrigin=new w({portal:a.portal,styleName:t.styleName,name:e}))}return n})}function W(t,e,a){const l=H.replaceAll(/\{SymbolName\}/gi,t),s=e.portal!=null?e.portal:N.getDefault();return D(l,a).then(o=>{const r=v(o.data);return F(r,{portal:s,url:u(U(l)),origin:"portal-item"})})}export{R as fetchSymbolFromStyle,M as getStyleItemFromStyle,z as resolveWebStyleSymbol};
