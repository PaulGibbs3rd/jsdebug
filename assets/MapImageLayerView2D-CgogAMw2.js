import{bf as n,ak as d,aA as l,aP as c,gO as u,aU as p,d as _,b as o,m,c as f}from"./index-CzvLtnX1.js";import{r as y}from"./BitmapContainer-CYTA_SEf.js";import{S as H}from"./LayerView2D--e9gSTDz.js";import{A as w}from"./GraphicsView2D-CBTRavXz.js";import{h as v}from"./HighlightGraphicContainer-DhyPHvEN.js";import{_ as $}from"./ExportStrategy-BYuDRw9l.js";import{y as x}from"./LayerView-DMEwuW7Q.js";import{i as U}from"./MapImageLayerView-qaeBGERh.js";import{i as b}from"./RefreshableLayerView-CoTThkI-.js";import{S as G}from"./MapServiceLayerViewHelper-D_a4EVrv.js";import{r as S}from"./drapedUtils-EmUI5byW.js";import"./WGLContainer-UBqTgyqK.js";import"./Utils-B-HfPvxQ.js";import"./BoundingBox-CfNhF6-u.js";import"./WGLBrushVTLSymbol-Ds8R82mK.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-PyQiTsc3.js";import"./Container-BrN4Ui-E.js";import"./EffectView-BiQ7qc0o.js";import"./BitmapTechnique-YcmA_Lg2.js";import"./GraphShaderModule-fiAQC1Zo.js";import"./TechniqueType-uMFRS8dR.js";import"./CIMSymbolHelper-Dul3J0hn.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-C1i-aeFk.js";import"./Rect-CUzevAry.js";import"./OverrideHelper-DIx2mYgX.js";import"./callExpressionWithFeature-BqIGys1L.js";import"./AttributeStore-XuGbXzoi.js";import"./UpdateTracking2D-DgMtH1pt.js";import"./queryUtils-6TLl6Zev.js";import"./json-Wa8cmqdu.js";import"./timeSupport-C95NcD1h.js";import"./TimeOnly-DUjwkvaH.js";import"./FeatureCommandQueue-C6yVidQ1.js";import"./heatmapTextureUtils-C4N7TM8m.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BH4vjdGx.js";import"./normalizeUtilsSync-Cc40aJ8I.js";import"./AGraphicContainer-DyapwdFp.js";import"./TechniqueInstance-ChSshhqb.js";import"./TileContainer-Bq-a2BCj.js";import"./ExportImageParameters-BWRvZJrm.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-vo1-sn1O.js";import"./timeSupport-CgS5mQjm.js";import"./popupUtils-C5Xxoh_A.js";let h=class extends U(b(H(x))){constructor(){super(...arguments),this._highlightGraphics=new n,this._updateHash=""}fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{d(i)||l.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,r=i>=10.3,g=i>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new G({createFetchPopupFeaturesQueryGeometry:(a,s)=>S(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new $({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:r,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,r){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...r})}fetchImageBitmap(t,e,i,r){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...r})}highlight(t,e){const i=u(t);if(i.length===0)return p();const r=e?.name??_;return this._addHighlightGraphics(i,r),p(()=>!this.destroyed&&this._removeHighlightGraphics(i,r))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map(i=>i.uid),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(i=>i.uid),e)}};o([m()],h.prototype,"strategy",void 0),o([m()],h.prototype,"updating",void 0),h=o([f("esri.views.2d.layers.MapImageLayerView2D")],h);const vt=h;export{vt as default};
