import{e_ as p,u as h,d as c,H as d,aN as u,es as g,b as t,m as i,c as y}from"./index-CzvLtnX1.js";import{l as m}from"./LayerView3D-C3wz0Xd_.js";import{l as f,r as b}from"./queryForSymbologySnapping-Bij8ZnaA.js";import{x as v}from"./GraphicsProcessor-BmJgUgo2.js";import{r as S}from"./projectExtentUtils-dd9OO2QQ.js";import{y as w}from"./LayerView-DMEwuW7Q.js";import"./ExtentSet-qWs8Lc6G.js";import"./rendererConversion-CGpNLgtM.js";import"./optimizedFeatureQueryEngineAdapter-C01vnci5.js";import"./PooledRBush-IF1bQTeP.js";import"./popupUtils-C5Xxoh_A.js";import"./Graphics3DObjectStates-DZcqh-aC.js";import"./highlightUtils-D2lMfk8z.js";import"./geometryServiceUtils-DDNHyfMa.js";let s=class extends m(w){constructor(){super(...arguments),this.type="graphics-3d",this.symbologySnappingSupported=!0,this._slicePlaneEnabled=!1,this.fullExtentInLocalViewSpatialReference=null,this.ignoresMemoryFactor=!0}get highlightOptions(){return null}initialize(){this._set("processor",new v({owner:this,scaleVisibilityEnabled:!0,frustumVisibilityEnabled:!0})),this.addResolvingPromise(this.processor.initializePromise),this.addHandles(this.layer.on("graphic-update",e=>this.processor.graphicsCore.graphicUpdateHandler(e))),this.layer.internal?this.notifyChange("updating"):(this.addResolvingPromise(S(this).then(e=>this.fullExtentInLocalViewSpatialReference=e)),this.addHandles(p(()=>this.view?.basemapTerrain?.ready,()=>()=>this.notifyChange("updating"),{once:!0})))}destroy(){this._updatingHandles.removeAll(),this._set("processor",h(this.processor))}get loadedGraphics(){return this.layer.graphics}get legendEnabled(){return this.canResume()&&!this.processor?.frustumVisibilitySuspended}get visibleAtCurrentScale(){return!this.processor?.scaleVisibilitySuspended}get slicePlaneEnabled(){const e=this.layer.internal;return this._slicePlaneEnabled&&!e}set slicePlaneEnabled(e){this._slicePlaneEnabled=e}getSuspendInfo(){const e=super.getSuspendInfo();return e.outsideOfView=this.processor?.frustumVisibilitySuspended??!1,e}getHit(e){return this.processor.getHit(e)}whenGraphicBounds(e,r){return this.processor.whenGraphicBounds(e,r)}computeAttachmentOrigin(e,r){return this.processor?.computeAttachmentOrigin(e,r)}getSymbolLayerSize(e,r){return this.processor.getSymbolLayerSize(e,r)}queryGraphics(){return Promise.resolve(this.loadedGraphics)}maskOccludee(e){return this.processor.maskOccludee(e)}highlight(e,r){return this.processor.highlight(e,r?.name??c)}async elevationAlignPointsInFeatures(e,r){const{processor:o}=this;if(o?.graphics3DGraphics==null)throw new d("graphicslayerview3d:missing-processor","A Graphics3D processor is needed to resolve graphics elevation.");const{graphics3DGraphics:n}=o,l=a=>typeof a=="number"?n.get(a):void 0;return f(this.view,this.layer,l,e,r)}async queryForSymbologySnapping(e,r){return b(this.processor,e,r)}get updatePolicy(){return this.processor?.graphicsCore.effectiveUpdatePolicy||u.SYNC}isUpdating(){return this.view&&this.layer&&!(!this.processor?.updating&&(this.layer.internal||this.view.basemapTerrain?.ready))}get performanceInfo(){return new g(this.usedMemory,this.loadedGraphics.length,-1,-1)}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return this.processor?.graphicsCore?.unprocessedMemoryEstimate}get test(){return{graphics3DProcessor:this.processor,loadedGraphics:this.loadedGraphics}}};t([i()],s.prototype,"highlightOptions",null),t([i()],s.prototype,"loadedGraphics",null),t([i({readOnly:!0})],s.prototype,"legendEnabled",null),t([i()],s.prototype,"layer",void 0),t([i({readOnly:!0})],s.prototype,"processor",void 0),t([i({readOnly:!0})],s.prototype,"visibleAtCurrentScale",null),t([i()],s.prototype,"_slicePlaneEnabled",void 0),t([i({type:Boolean})],s.prototype,"slicePlaneEnabled",null),s=t([y("esri.views.3d.layers.GraphicsLayerView3D")],s);const L=s;export{L as default};
