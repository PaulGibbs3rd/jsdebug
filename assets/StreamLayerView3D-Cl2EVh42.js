import{ev as O,g as C,u as f,i8 as $,aP as _,aC as G,b as r,m as i,c as d,aN as R,H as k,aV as x,fr as E}from"./index-CzvLtnX1.js";import{d as T}from"./StreamFeatureManager-CGclBv1z.js";import{createConnection as V}from"./createConnection-DjeUhJQN.js";import{r as j}from"./EventedSet-CB4NBdOg.js";import{O as U,h as N}from"./HeatmapDensity.glsl-B4Yrhe_U.js";import{l as F}from"./LayerView3D-C3wz0Xd_.js";import{y as L}from"./LayerView-DMEwuW7Q.js";import{r as D}from"./StreamLayerView-jbZELj7M.js";import"./CircularArray-CujHzHWW.js";import"./streamLayerUtils-CKwt2uXH.js";import"./query-Dy8NjPeC.js";import"./pbfQueryUtils-CboXUN80.js";import"./pbf-DU6DDbsT.js";import"./timeSupport-CgS5mQjm.js";import"./projectExtentUtils-dd9OO2QQ.js";import"./geometryServiceUtils-DDNHyfMa.js";import"./dehydratedFeatureComparison-BBO76xQi.js";import"./utils-CICEYmO-.js";import"./cimSymbolUtils-D5sHtYK8.js";import"./queryForSymbologySnapping-Bij8ZnaA.js";import"./Graphics3DFeatureProcessor-DGpSCVsO.js";import"./hash-CcEbRgUF.js";import"./ExtentSet-qWs8Lc6G.js";import"./rendererConversion-CGpNLgtM.js";import"./optimizedFeatureQueryEngineAdapter-C01vnci5.js";import"./PooledRBush-IF1bQTeP.js";import"./popupUtils-C5Xxoh_A.js";import"./Graphics3DObjectStates-DZcqh-aC.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DKzVzLpH.js";import"./QueryEngine-BW9qTl6x.js";import"./WhereClauseCache-9TmBMoEG.js";import"./WhereClause-D7Picv4q.js";import"./TimeOnly-DUjwkvaH.js";import"./timeSupport-C95NcD1h.js";import"./queryUtils-6TLl6Zev.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./utils-BeXlThvO.js";import"./utils-CtGOd0WT.js";import"./utils-BJJHgLwi.js";import"./ClassBreaksDefinition-CXt_rIOj.js";import"./FixedIntervalBinParameters-BzwSDYbq.js";import"./highlightUtils-D2lMfk8z.js";import"./FeatureStore-B1CjHmrb.js";import"./BoundsStore-CrM5VOwr.js";import"./heatmapTextureUtils-C4N7TM8m.js";const H=2500;let h=class extends G{constructor(s){super(s)}getObjectId(){return this.objectId}};r([i({type:Number,json:{read:!0}})],h.prototype,"objectId",void 0),h=r([d("esri.layers.graphics.controllers.StreamController.StreamGraphic")],h);class z{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const t=this._idToGraphic.get(e);return t?(t.sourceLayer=t.layer=null,this._idToGraphic.delete(e),t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._idToGraphic.size}}let n=class extends O.EsriPromiseMixin(C){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new j,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_shutdown(){this._clearInterval(),this.connection=f(this.connection),this.store=f(this.store),this.removeAllHandles()}_startup(){const{layer:e,layerView:t}=this,{spatialReference:l,definitionExpression:p,geometryDefinition:u,objectIdField:m,timeInfo:v,purgeOptions:I,maxReconnectionAttempts:w,maxReconnectionInterval:b,customParameters:S}=e,P=e.geometryType?$.toJSON(e.geometryType):null,M=l,y=t.view.spatialReference;this.clear(),this._set("connection",V(e.parsedUrl,M,y,P,p,u,w,b,S??void 0)),this._outSpatialReference=y.toJSON(),this.store=new z(this._onUpdate.bind(this)),this.featuresManager=new T(this.store,m,v.toJSON(),I);const g="startup-watches";this.removeHandles(g),this.addHandles([e.on("send-message-to-socket",a=>this.connection.sendMessageToSocket(a)),e.on("send-message-to-client",a=>this.connection.sendMessageToClient(a)),this.connection.on("data-received",a=>this._onFeature(a)),this.connection.on("message-received",a=>this._onWebSocketMessage(a)),_(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],g),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{e.geometry==null||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=h.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){t!=null&&this.graphics.removeMany(t),e!=null&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const l=performance.now(),p=l-t;if(p>H){t=l;const u=Math.round(this._updateInfo.client/(p/1e3)),m=Math.round(this._updateInfo.websocket/(p/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:u,websocket:m})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){this.connection==null&&this._startup()}clearGraphics(){this.graphics.clear()}};r([i()],n.prototype,"isPaused",void 0),r([i({constructOnly:!0})],n.prototype,"layer",void 0),r([i({constructOnly:!0})],n.prototype,"layerView",void 0),r([i()],n.prototype,"connection",void 0),r([i({readOnly:!0})],n.prototype,"updating",null),n=r([d("esri.layers.graphics.controllers.StreamController")],n);let c=class extends U{constructor(s){super(s),this.suspendResumeExtentMode="computed"}get connection(){return this.controller?.connection}createController(){return new n({layer:this.layer,layerView:this.layerView})}beforeSetController(){}pause(){this.controller?.pauseStream()}resume(){this.controller?.resumeStream()}disconnect(){this.controller?.disconnect()}connect(){this.controller?.connect()}clear(){this.controller?.clearGraphics()}};r([i()],c.prototype,"controller",void 0),r([i()],c.prototype,"connection",null),r([i()],c.prototype,"suspendResumeExtentMode",void 0),c=r([d("esri.views.3d.layers.graphics.StreamGraphics3DGraphicsPipeline")],c);let o=class extends D(N(F(L))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=R.ASYNC,this.hasZ=!0,this.hasM=!1,this.featureEffect=null}initialize(){this.addHandles(_(()=>this.suspended,s=>{this.graphicsPipeline&&this._onSuspendedChange(s)}))}get connectionError(){const s=this.graphicsPipeline?.connection?.errorString;return s?new k("stream-controller",s):null}createQuery(){return new x({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(s,e){return this.graphicsPipeline.graphicsQuery.executeQueryForLatestObservations(this._ensureQuery(s),e?.signal)}async queryObjectIds(s,e){return(await super.queryObjectIds(s,e)).filter(E)}get _streamConnectionStatus(){return this.graphicsPipeline?.connection?.connectionStatus??"disconnected"}async createGraphicsPipeline(){return new c({layerView:this})}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){this.graphicsPipeline?.pause()}_doResume(){this.graphicsPipeline?.resume()}_doDisconnect(){this.graphicsPipeline?.disconnect(),this._doPause()}_doConnect(){this.graphicsPipeline?.connect(),this.resume()}_doClear(){this.graphicsPipeline?.clear()}};r([i({readOnly:!0})],o.prototype,"updatePolicy",void 0),r([i({readOnly:!0})],o.prototype,"connectionError",null),r([i()],o.prototype,"graphicsPipeline",void 0),r([i({readOnly:!0})],o.prototype,"hasZ",void 0),r([i({readOnly:!0})],o.prototype,"hasM",void 0),r([i()],o.prototype,"featureEffect",void 0),r([i({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=r([d("esri.views.3d.layers.StreamLayerView3D")],o);const Ne=o;export{Ne as default};
