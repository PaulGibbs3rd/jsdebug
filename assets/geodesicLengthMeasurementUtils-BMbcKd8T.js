import{bJ as u,bs as l,bu as i,lA as a}from"./index-CfYeSufM.js";import{geodesicLength as c}from"./geometryEngine-DZQmjC3o.js";import{y as f,q as m,b as y,R}from"./geodesicUtils-AyGMpq1K.js";function q(e){return f(e)||u(e)}function p(e,n,r,...o){return f(e)?n.apply(void 0,o):u(e)?r.apply(void 0,o):null}const w=1e5;function A(e){const{spatialReference:n}=e;return p(n,$,g,e)}function J(e,n){if(!l(e.spatialReference,n.spatialReference))return null;const{spatialReference:r}=e;return t[0]=e.x,t[1]=e.y,t[2]=e.hasZ?e.z:0,s[0]=n.x,s[1]=n.y,s[2]=n.hasZ?n.z:0,d(t,s,r)}function d(e,n,r){return p(r,b,h,e,n,r)}function b(e,n,r){return a(m(v,e,n,r).distance,"meters")}function h(e,n,r){return a(c(x(e,n,r),"meters"),"meters")}function $(e){return a(R([e],"meters")[0],"meters")}function g(e){return a(c(e,"meters"),"meters")}function x(e,n,r){return{type:"polyline",spatialReference:r,paths:[[[...e],[...n]]]}}const v=new y,t=i(),s=i();export{q as e,J as f,A as m,w as p,p as r,d as u};
