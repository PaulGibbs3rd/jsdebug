import{b as o,m as l,cg as A,ao as g,Q as u,ah as y,R as E,T as R,am as T,c as $,ch as O,ci as j,aq as K,cj as L,ck as U,aA as x,cl as V,ap as P,H as c,K as m,bb as C,bc as q,cm as I,cn as M,co as b,cp as z,cq as k}from"./index-CzvLtnX1.js";import{r as J}from"./I3SIndexInfo-MCyed1-U.js";const D=a=>{let s=class extends a{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=O(async(r,e,i)=>{switch(r){case d.SAVE:return this._save(e);case d.SAVE_AS:return this._saveAs(i,e)}})}readSpatialReference(r,e){return v(e)}readFullExtent(r,e,i){if(r!=null&&typeof r=="object"){const p=r.spatialReference==null?{...r,spatialReference:v(e)}:r;return y.fromJSON(p,i)}const t=e.store,n=v(e);return n==null||t?.extent==null||!Array.isArray(t.extent)||t.extent.some(p=>p<f)?null:new y({xmin:t.extent[0],ymin:t.extent[1],xmax:t.extent[2],ymax:t.extent[3],spatialReference:n})}parseVersionString(r){const e={major:Number.NaN,minor:Number.NaN,versionString:r},i=r.split(".");return i.length>=2&&(e.major=parseInt(i[0],10),e.minor=parseInt(i[1],10)),e}readVersion(r,e){const i=e.store,t=i.version!=null?i.version.toString():"";return this.parseVersionString(t)}readTitlePortalItem(r){return this.sublayerTitleMode!=="item-title"?void 0:r}readTitleService(r,e){const i=this.portalItem?.title;if(this.sublayerTitleMode==="item-title")return this.url?j(this.url,e.name):e.name;let t=e.name;if(!t&&this.url){const n=K(this.url);n!=null&&(t=n.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&i&&(t=i+" - "+t),L(t)}set url(r){if(r==null)return void this._set("url",r);const e=U({layer:this,url:r,nonStandardUrlAllowed:!1,logger:x.getLogger(this)});this._set("url",e.url),e.layerId!=null&&this._set("layerId",e.layerId)}writeUrl(r,e,i,t){V(this,r,"layers",e,t)}get parsedUrl(){const r=this._get("url"),e=P(r);return e&&this.layerId!=null&&(e.path=`${e.path}/layers/${this.layerId}`),e}async _fetchIndexAndUpdateExtent(r,e){this.indexInfo=J(this.parsedUrl?.path??"",this.rootNode,r,this.customParameters,this.apiKey,x.getLogger(this),e),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(r){if(r?.type==="page"){const e=r.rootIndex%r.pageSize,i=r.rootPage?.nodes?.[e];if(i?.obb?.center==null||i.obb.halfSize==null)throw new c("sceneservice:invalid-node-page","Invalid node page.");if(i.obb.center[0]<f||this.fullExtent==null||this.fullExtent.hasZ)return;const t=i.obb.halfSize,n=i.obb.center[2],p=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);this.fullExtent.zmin=n-p,this.fullExtent.zmax=n+p}else if(r?.type==="node"){const e=r.rootNode?.mbs;if(!Array.isArray(e)||e.length!==4||e[0]<f)return;const i=e[2],t=e[3],{fullExtent:n}=this;n&&(n.zmin=i-t,n.zmax=i+t)}}async _fetchService(r){if(this.url==null)throw new c("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const e=await this._fetchFirstLayerId(r);e!=null&&(this.layerId=e)}return this._fetchServiceLayer(r)}async _fetchFirstLayerId(r){const e=await m(this.url??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r});if(e.data&&Array.isArray(e.data.layers)&&e.data.layers.length>0)return e.data.layers[0].id}async _fetchServiceLayer(r){const e=await m(this.parsedUrl?.path??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r});e.ssl&&this.url&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(e.data.layerType&&e.data.layerType==="Voxel"&&(i=!0),i)return this._fetchVoxelServiceLayer();const t=e.data;this.read(t,this._getServiceContext()),this.validateLayer(t)}async _fetchVoxelServiceLayer(r){const e=(await m(this.parsedUrl?.path+"/layer",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r})).data;this.read(e,this._getServiceContext()),this.validateLayer(e)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(r){}async _saveAs(r,e){const i={...N,...e};let t=C.from(r);if(!t)throw new c("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");t.id&&(t=t.clone(),t.id=null);const n=t.portal||q.getDefault();await this._ensureLoadBeforeSave(),t.type=S,t.portal=n;const p=I(t,"portal-item",!0),w={layers:[this.write({},p)]};return await Promise.all(p.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(w,p,i),this.url&&(t.url=this.url),t.title||(t.title=this.title),_(t,i,h.newItem),await n.signIn(),await n.user.addItem({item:t,folder:i?.folder,data:w}),await M(this.resourceReferences,p),this.portalItem=t,b(p),p.portalItem=t,t}async _save(r){const e={...N,...r};if(!this.portalItem)throw new c("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==S)throw new c("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${S}"`);await this._ensureLoadBeforeSave();const i=I(this.portalItem,"portal-item",!0),t={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(t,i,e),this.url&&(this.portalItem.url=this.url),this.portalItem.title||(this.portalItem.title=this.title),_(this.portalItem,e,h.existingItem),await z(this.portalItem,t,this.resourceReferences,i),b(i),this.portalItem}async _validateAgainstJSONSchema(r,e,i){const t=i?.validationOptions;k(e,{errorName:"sceneservice:save"},{ignoreUnsupported:t?.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]}),t?.enabled}};return o([l(A)],s.prototype,"id",void 0),o([l({type:g})],s.prototype,"spatialReference",void 0),o([u("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readSpatialReference",null),o([l({type:y})],s.prototype,"fullExtent",void 0),o([u("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readFullExtent",null),o([l({readOnly:!0,type:E})],s.prototype,"heightModelInfo",void 0),o([l({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],s.prototype,"minScale",void 0),o([l({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],s.prototype,"maxScale",void 0),o([l({readOnly:!0})],s.prototype,"version",void 0),o([u("version",["store.version"])],s.prototype,"readVersion",null),o([l({type:String,json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),o([l({type:String,json:{read:!1}})],s.prototype,"sublayerTitleMode",void 0),o([l({type:String})],s.prototype,"title",void 0),o([u("portal-item","title")],s.prototype,"readTitlePortalItem",null),o([u("service","title",["name"])],s.prototype,"readTitleService",null),o([l({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],s.prototype,"layerId",void 0),o([l(R)],s.prototype,"url",null),o([T("url")],s.prototype,"writeUrl",null),o([l()],s.prototype,"parsedUrl",null),o([l({readOnly:!0})],s.prototype,"store",void 0),o([l({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],s.prototype,"rootNode",void 0),s=o([$("esri.layers.mixins.SceneService")],s),s},f=-1e38;function v(a){if(a.spatialReference!=null)return g.fromJSON(a.spatialReference);const s=a.store,r=s.indexCRS||s.geographicCRS,e=r&&parseInt(r.slice(r.lastIndexOf("/")+1),10);return e!=null?new g(e):null}function _(a,s,r){a.typeKeywords||(a.typeKeywords=[]);const e=s.getTypeKeywords();for(const i of e)a.typeKeywords.push(i);a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter((i,t,n)=>n.indexOf(i)===t),r===h.newItem&&(a.typeKeywords=a.typeKeywords.filter(i=>i!=="Hosted Service")))}var h;(function(a){a[a.existingItem=0]="existingItem",a[a.newItem=1]="newItem"})(h||(h={}));const S="Scene Service",N={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var d;(function(a){a[a.SAVE=0]="SAVE",a[a.SAVE_AS=1]="SAVE_AS"})(d||(d={}));export{D as R,d as V};
