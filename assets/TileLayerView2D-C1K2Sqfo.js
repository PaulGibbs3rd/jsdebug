import{bf as w,gL as y,gM as I,fs as T,gN as V,gO as H,aU as u,d as v,bs as C,ak as n,gP as f,be as b,aA as U,b as c,m as d,c as q}from"./index-CzvLtnX1.js";import"./UpdateTracking2D-DgMtH1pt.js";import"./CIMSymbolHelper-Dul3J0hn.js";import"./OverrideHelper-DIx2mYgX.js";import"./EffectView-BiQ7qc0o.js";import"./WGLContainer-UBqTgyqK.js";import"./Utils-B-HfPvxQ.js";import"./GridShader-3X71BwHW.js";import"./pbf-DU6DDbsT.js";import"./TechniqueType-uMFRS8dR.js";import"./FeatureCommandQueue-C6yVidQ1.js";import"./PieChartMeshWriter-mxIEcnPS.js";import{A as S}from"./GraphicsView2D-CBTRavXz.js";import{r as Q,o as p,n as _}from"./imageUtils-C2ZLcGA9.js";import{S as $}from"./LayerView2D--e9gSTDz.js";import{h as G}from"./HighlightGraphicContainer-DhyPHvEN.js";import{y as P}from"./LayerView-DMEwuW7Q.js";import{i as L}from"./RefreshableLayerView-CoTThkI-.js";import{P as k,S as A}from"./MapServiceLayerViewHelper-D_a4EVrv.js";import{r as F}from"./drapedUtils-EmUI5byW.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-C1i-aeFk.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CfNhF6-u.js";import"./callExpressionWithFeature-BqIGys1L.js";import"./WGLBrushVTLSymbol-Ds8R82mK.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-PyQiTsc3.js";import"./Container-BrN4Ui-E.js";import"./GraphShaderModule-fiAQC1Zo.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-XuGbXzoi.js";import"./queryUtils-6TLl6Zev.js";import"./json-Wa8cmqdu.js";import"./timeSupport-C95NcD1h.js";import"./TimeOnly-DUjwkvaH.js";import"./heatmapTextureUtils-C4N7TM8m.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BH4vjdGx.js";import"./TurboLine-B7KOcmk4.js";import"./utils-BDxBHtAv.js";import"./normalizeUtilsSync-Cc40aJ8I.js";import"./BitmapTechnique-YcmA_Lg2.js";import"./TileContainer-Bq-a2BCj.js";import"./AGraphicContainer-DyapwdFp.js";import"./TechniqueInstance-ChSshhqb.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-vo1-sn1O.js";import"./popupUtils-C5Xxoh_A.js";const z=[0,0];let l=class extends L(Q($(P))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,e=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,e?.effectiveMinLOD,e?.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,h)=>this.fetchTile(i,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),k(this,this.layer)){const i=this._highlightView=new S({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new G(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new A({createFetchPopupFeaturesQueryGeometry:(h,s)=>F(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,s)=>{i.graphicUpdateHandler({graphic:h,property:s})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e):[]}highlight(t,e){const i=H(t);if(i.length===0)return u();const h=e?.name??v;return this._addHighlightGraphics(i,h),u(()=>!this.destroyed&&this._removeHighlightGraphics(i,h))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map(i=>i.uid),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(i=>i.uid),e)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return C(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(z,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,e):this._fetchTileWithoutTilemapCache(t,e)}async _fetchTileWithoutTilemapCache(t,e={}){const{signal:i,resamplingLevel:h=0}=e;try{return await this._fetchImage(t,i)}catch(s){if(n(s))throw s;if(!this.resampling)return p(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new f(r),o=await this._fetchTileWithoutTilemapCache(a,{...e,resamplingLevel:h+1});return _(this._tileInfoView,o,a,t)}}return p(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,e={}){const i=this.tilemapCache,{signal:h,resamplingLevel:s=0}=e,r=new f(0,0,0,0);let a,o=null;try{if(o=await i.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await b(e),p(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(g){if(n(g))throw g;if(this.resampling&&o==="unknown"&&s<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){r.set(m);try{a=await this._fetchTileWithTilemapCache(r,{...e,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,t):a:p(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){n(e)||U.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};c([d()],l.prototype,"resampling",null),c([d()],l.prototype,"tilemapCache",null),l=c([q("esri.views.2d.layers.TileLayerView2D")],l);const Lt=l;export{Lt as default};
