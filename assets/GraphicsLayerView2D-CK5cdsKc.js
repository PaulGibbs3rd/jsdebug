import{e_ as m,u as c,aC as g,aG as n,b0 as l,aU as h,d,b as o,m as w,c as u}from"./index-CfYeSufM.js";import{S as y}from"./LayerView2D-C4Cdeea2.js";import{t as V}from"./GraphicContainer-Z_l2v49C.js";import{A as v}from"./GraphicsView2D-D4npPHfS.js";import{y as f}from"./LayerView-Ck8FMSD2.js";import"./Container-Cz9A_ioc.js";import"./EffectView-Jcs4MyZ6.js";import"./AGraphicContainer-CVpmy9ro.js";import"./TechniqueInstance-suOgeU_P.js";import"./UpdateTracking2D-BGJ5gcc8.js";import"./Utils-TBp02Upz.js";import"./BoundingBox-hvRvsOsN.js";import"./TileContainer-aWWjUWr5.js";import"./WGLContainer-DAL2R1TP.js";import"./WGLBrushVTLSymbol-D4Azmvhv.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-CbnhisJb.js";import"./FeatureCommandQueue-DEjbHgMN.js";import"./CIMSymbolHelper-DLCfSN7J.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-DzQCuzrR.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-rlKkNXTl.js";import"./heatmapTextureUtils-BwsdgbXL.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-w0BYbTZ1.js";import"./OverrideHelper-2qszNNyl.js";import"./callExpressionWithFeature-B3Mz5oa9.js";import"./AttributeStore-B7dEZ_45.js";import"./queryUtils-DtT3aDWa.js";import"./json-Wa8cmqdu.js";import"./timeSupport-bCcjezcf.js";import"./TimeOnly-DNvrMvt4.js";import"./normalizeUtilsSync-h4KLBvMC.js";let a=class extends y(f){attach(){this.graphicsView=new v({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new V(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const p=(t==null?void 0:t.name)??d;return this._addHighlights(e,p),h(()=>!this.destroyed&&this._removeHighlights(e,p))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],a.prototype,"graphicsView",void 0),a=o([u("esri.views.2d.layers.GraphicsLayerView2D")],a);const ri=a;export{ri as default};
