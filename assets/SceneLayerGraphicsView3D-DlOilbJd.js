const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/I3STreeDebugger-5HOrkWiF.js","assets/index-CzvLtnX1.js","assets/TileTreeDebugger-DS28bFpU.js"])))=>i.map(i=>d[i]);
import{ib as V,ew as j,oh as H,oi as q,u as y,P as N,aP as Q,_ as T,kC as C,aN as U,mq as k,aT as z,d as B,aA as x,hZ as F,oj as W,kl as K,ok as Z,bt as Y,bu as J,fG as A,gq as X,ol as ee,bz as te,om as re,on as ie,mv as S,gu as se,oo as oe,kc as ae,aV as G,fs as ne,es as de,op as le,c4 as he,b as p,m as g,ft as ue,eo as ce,c as pe}from"./index-CzvLtnX1.js";import{A as P,K as ge}from"./I3SOverrides-ByAbX-OO.js";import{l as _e}from"./LayerView3D-C3wz0Xd_.js";import{D as me,p as fe,e as ye}from"./Graphics3DFeatureProcessor-DGpSCVsO.js";import{w as be,a as ve,s as Ie,b as xe,c as Ee,i as we}from"./SceneLayerView-A2zk7vGf.js";import{X as Ne,e as Ce,k as Oe,A as De,Q as R}from"./I3SUtil-BmjEU8DT.js";import{u as Fe,t as Ae}from"./TemporalSceneLayerView-CmFt6qu9.js";import{i as Se}from"./PopupSceneLayerView-DxnfrSf0.js";import{u as Ge}from"./popupUtils-C5Xxoh_A.js";import"./RenderTexture-Bmcrz2_n.js";import"./resourceUtils-DkMU3AYG.js";import"./I3SNode-WMiCmM9v.js";import"./I3SBinaryReader-ciU6-RUE.js";import"./ReactiveSet-67kD2XpC.js";import"./hash-CcEbRgUF.js";import"./ExtentSet-qWs8Lc6G.js";import"./rendererConversion-CGpNLgtM.js";import"./optimizedFeatureQueryEngineAdapter-C01vnci5.js";import"./PooledRBush-IF1bQTeP.js";import"./Graphics3DObjectStates-DZcqh-aC.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DKzVzLpH.js";import"./QueryEngine-BW9qTl6x.js";import"./WhereClauseCache-9TmBMoEG.js";import"./WhereClause-D7Picv4q.js";import"./TimeOnly-DUjwkvaH.js";import"./timeSupport-C95NcD1h.js";import"./queryUtils-6TLl6Zev.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./utils-BeXlThvO.js";import"./utils-CtGOd0WT.js";import"./utils-BJJHgLwi.js";import"./ClassBreaksDefinition-CXt_rIOj.js";import"./FixedIntervalBinParameters-BzwSDYbq.js";import"./highlightUtils-D2lMfk8z.js";import"./LayerView-DMEwuW7Q.js";import"./timeSupport-CgS5mQjm.js";class $ extends V{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:r=>[r.geometryBuffer]},e,{hasInitialize:!0})}}class Pe extends j{constructor(e,r){super(),this._updateAndCompare=e,this._notifyUpdated=r,this._nodes=new Map,this._graphics=new Map,this._duplicates=new Map}clear(){if(this._graphics.size>0){const e=this.toArray();this._graphics.clear(),this.emit("change",{added:[],removed:e})}this._nodes.clear()}get length(){return this._graphics.size}get(e){return this._graphics.get(e)}getNode(e){return this._nodes.get(e)}hasNode(e){return this._nodes.has(e)}nodes(){return this._nodes.values()}addNode(e,r){this._nodes.set(e,r);const i=r.graphics;if(i.length===0)return;const s=new Set;for(let a=0;a<i.length;a++){const n=i[a],d=n.objectId,c=this._graphics.get(d);if(c){s.add(d),n!==c&&(i[a]=c);const h=this._duplicates.get(d);h?h.push(e):this._duplicates.set(d,[c.nodeIndex,e])}else n.nodeIndex=e,this._graphics.set(d,n)}s.size&&this._updateForeignGraphics(r);const o=s.size>0?i.filter(a=>!s.has(a.objectId)):i;o.length>0&&this.emit("change",{added:o,removed:[]})}removeNode(e){const r=this._nodes.get(e);if(!r)return;this._nodes.delete(e);const i=new Set,s=[];for(const o of r.graphics){const a=o.objectId,n=this._graphics.get(a);if(!n)continue;const d=this._duplicates.get(a);if(d){const c=d.indexOf(e);if(c===-1)continue;if(d.splice(c,1),n.nodeIndex===e){let h=this.getNode(d[0]);for(let l=1;l<d.length;l++){const f=this.getNode(d[l]);(h==null||f!=null&&f.node.level>h.node.level)&&(h=f)}h!=null&&i.add(h)}d.length===1&&this._duplicates.delete(a)}else this._graphics.delete(a),s.push(o)}s.length>0&&this.emit("change",{added:[],removed:s}),i.forEach(o=>this._updateForeignGraphics(o))}_updateForeignGraphics(e){const r=[],i=e.node.index,s=e.node.level;let o=0;for(;o<e.graphics.length;){const a=e.graphics[o].nodeIndex;if(a===i){o++;continue}let n=1;for(;o+n<e.graphics.length&&e.graphics[o+n].nodeIndex===a;)n++;const d=this.getNode(a);if(d!=null&&d.node.level>s)o+=n;else{for(let c=o;c<o+n;c++){const h=e.graphics[c];h.nodeIndex=i,this._updateAndCompare(h,e,c)&&r.push(h)}o+=n}}r.length>0&&this._notifyUpdated(r)}toArray(){return Array.from(this._graphics.values())}find(e){return H(this._graphics,e)}some(e){return q(this._graphics,e)}forEach(e){this._graphics.forEach(r=>e(r))}forEachNode(e){this._nodes.forEach((r,i)=>e(r,i))}get nodeCount(){return this._nodes.size}_checkInvariants(){const e=new Map;this._nodes.forEach((r,i)=>{r.graphics.forEach(s=>{e.set(s.objectId,1+(e.get(s.objectId)??0)),this._duplicates.get(s.objectId)})}),e.forEach((r,i)=>{const s=this._graphics.get(i);if(!s||!this._nodes.get(s.nodeIndex))return;const o=this._duplicates.get(i);o&&o.forEach(a=>{this._nodes.get(a)})})}}const M=we();class $e{constructor(e,r,i,s){this.graphics=e,this.featureIds=r,this.attributeInfo=i,this.node=s}get cachedMemory(){return this.graphics.reduce((e,r)=>le(r)+e,he(this.featureIds)+1024)}}let u=class extends Fe(Ae(Se(_e(be)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this._pendingEditsQueue=Promise.resolve(),this.loadedGraphics=new Pe((t,e,r)=>Re(t,e,r),t=>this.processor.graphicsCore.recreateGraphics(t)),this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}tryRecycleWith(t,e){return t.url===this.layer.url&&this._i3sOverrides.isEmpty?t.load(e).then(()=>{Ne(this.layer,t,this._i3sOverrides),this.layer=t,this._i3sOverrides.destroy();const r=this.view.resourceController?.memoryController;this._i3sOverrides=new P({view:this.view,layer:t,memoryController:r}),y(this._queryEngine),this._setupQueryEngine(),this.processor.resetObjectStates()}):null}initialize(){this.addResolvingPromise(this.layer.indexInfo);const t=this.view.resourceController?.memoryController;this._i3sOverrides=new P({view:this.view,layer:this.layer,memoryController:t}),Ce(this.layer,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new ve({layerView:this}),this._updatingHandles.add(()=>this.layer.rangeInfos,e=>this._rangeInfosChanged(e),N),this._updatingHandles.add(()=>this.layer.renderer,(e,r)=>this._rendererChange(e,r)),this._updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.addHandles(Q(()=>C.I3S_TREE_SHOW_TILES,e=>{if(e&&!this._treeDebugger){const r=this._controller.crsIndex;T(()=>import("./I3STreeDebugger-5HOrkWiF.js"),__vite__mapDeps([0,1,2])).then(({I3STreeDebugger:i})=>{!this._treeDebugger&&C.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new i({lv:this,view:this.view,nodeSR:r}))})}else e||!this._treeDebugger||C.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},N)),this._set("processor",new me({owner:this,preferredUpdatePolicy:U.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:this.layer.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",({extent:e,spatialReference:r})=>this._controller.updateElevationChanged(e,r)),this.supportsHeightUnitConversion&&(this._verticalScale=k("point",this.layer.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.when()),this._memCache=this.view.resourceController.memoryController.newCache(`psl-${this.uid}`),this._controller=new ge({layerView:this}),Oe(this.layer.geometryDefinitions)&&(this._worker=new $(e=>this.view.resourceController.immediate.schedule(e))),this.addHandles(this.layer.on("apply-edits",e=>this._updatingHandles.addPromise(e.result))),this.addHandles(this.layer.on("edits",e=>{const r=this._pendingEditsQueue.then(()=>this._handleEdits(e)).then();this._pendingEditsQueue=r,this._updatingHandles.addPromise(r)})),this.when(()=>{this._setupQueryEngine(),this._updatingHandles.add(()=>this.maximumNumberOfFeatures,e=>this._controller.featureTarget=e,N),this._updatingHandles.add(()=>this.suspended,e=>{e&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=y(this._treeDebugger),this._i3sOverrides=y(this._i3sOverrides),this._set("processor",y(this.processor)),this._controller=y(this._controller),this._queryEngine=y(this._queryEngine),this._worker=y(this._worker),this._memCache=y(this._memCache),this.loadedGraphics.clear(),this._fieldsHelper=y(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??1}get requiredFields(){return this._fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){return this.processor?.graphicsCore?.displayFeatureLimit?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(t){t!=null?(this._override("maximumNumberOfFeatures",t),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){return!this.suspended&&!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const t=this.layer.excludeObjectIds;return t.length?t.toArray().sort((e,r)=>e-r):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}get contentVisible(){return!this.suspended&&!!this._controller?.rootNodeVisible}get legendEnabled(){return this.contentVisible&&this.i3slayer?.legendEnabled===!0}async whenGraphicAttributes(t,e){return De(this.layer,t,this._getObjectIdField(),e,()=>[...this.loadedGraphics.nodes()])}getHit(t){if(!this.loadedGraphics)return null;const e=z(this.loadedGraphics.find(i=>i.uid===t),this.layer),r=this._getObjectIdField();return e?.attributes?.[r]?(e.layer=this.layer,e.sourceLayer=this.layer,{type:"graphic",graphic:e,layer:e.layer}):null}whenGraphicBounds(t,e){return this.processor.whenGraphicBounds(t,e)}computeAttachmentOrigin(t,e){return this.processor.computeAttachmentOrigin(t,e)}isUpdating(){return!!(this._controller?.updating||this.processor?.updating||this._fieldsHelper?.updating||this.layerFilterUpdating)}highlight(t,e){return this.processor.highlight(t,this.layer.objectIdField,e?.name??B)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(t){return Ie(this._attributeEditingContext,t)}async _decompressBinaryPointData(t,e){const r={geometryBuffer:t.geometryBuffer};this._worker==null&&(this._worker=new $(s=>this.view.resourceController.immediate.schedule(s)));const i=await this._worker.invoke(r,e);if(i==null)throw new Error("Failed to decompress Draco point data");return{positionData:i.positions,featureIds:i.featureIds}}async addNode(t,e,r){if(!O(e)&&!Me(e))throw new Error;if(this.loadedGraphics.hasNode(t.index))return void x.getLogger(this).error("I3S node "+t.id+" already added");const i=this.layer.fullExtent!=null?Le(this.layer.fullExtent.clone(),.5):null,{featureIds:s,pointPositions:o}=O(e)?await this._extractBinaryPointPositions(t,e,r):this._extractLegacyPointPositions(e),a=new Array;this._validatePositions(t,s,o,i,a);const n=this._controller.crsVertex,d=this.view.spatialReference;F(o,n,0,o,d,0,s.length);const c=O(e)?t.level:0,h=this._createGraphics(s,o,t.index,c),l=new $e(h,s,e.attributeDataInfo,t);if(await this._i3sOverrides.applyAttributeOverrides(l.featureIds,e.attributeDataInfo,r),t.numFeatures=l.graphics.length,this._updateNodeMemory(t),D(l),a.length>0&&(this._computeObb(t,a,n),this._controller.updateVisibility(t.index)),!this._controller.isGeometryVisible(t))return void this._cacheNodeData(l);if(this._verticalScale!=null)for(const I of l.graphics)this._verticalScale(I.geometry);const f=this.view._stage.renderView.olidRenderHelper;if(f){const I=W(this.view.map,this.layer.uid);for(let _=0;_<l.featureIds.length;_++){const E=l.featureIds[_];f.setUidToObjectAndLayerId(E,l.graphics[_].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled&&!I&&Ge(this.layer,this.view.popup?.defaultPopupTemplateEnabled),l.node.resources.attributes,_)}}this.loadedGraphics.addNode(t.index,l),this._controller.updateLoadStatus(t.index,!0),this._filterNode(l),this._treeDebugger&&this._treeDebugger.update()}_computeObb(t,e,r){const i=this._controller.crsIndex,s=i.isGeographic?this.view.renderSpatialReference:i;F(e,r,0,e,s,0),t.serviceObbInIndexSR=K(new Z(e,3)),i.isGeographic&&(Y(t.serviceObbInIndexSR.center,s,v,i),t.serviceObbInIndexSR.center=v)}isNodeLoaded(t){return this.loadedGraphics.hasNode(t)}isNodeReloading(){return!1}updateNodeState(){}async _extractBinaryPointPositions(t,e,r){const i=await this._decompressBinaryPointData(e,r),s=i.positionData,o=3,a=s.length/o,n=A(3*a),d=t.serviceObbInIndexSR!=null?t.serviceObbInIndexSR.center:X,c=Math.abs(d[2])*2**-20;for(let h=0;h<a;h++){const l=h*o;n[l]=s[l]+d[0],n[l+1]=s[l+1]+d[1],n[l+2]=s[l+2]+d[2],Math.abs(n[l+2])<c&&(n[l+2]=0)}return{featureIds:i.featureIds?ee(i.featureIds):[],pointPositions:n}}_extractLegacyPointPositions(t){const e=t.pointData.length,r=A(3*e),i=new Array;for(let s=0;s<e;s++){const o=t.pointData[s],a=o.featureDataPosition,n=a.length,d=o.geometries?.[0]??Ve[n],c=o.featureIds[0];if(d.type!=="Embedded"||d.params.type!=="points"||n<2||n>3)continue;const h=d.params.vertexAttributes?.position??[0,0,0],l=3*i.length;r[l]=a[0]+h[0],r[l+1]=a[1]+h[1],r[l+2]=n===3?a[2]+h[2]:NaN,i.push(c)}return{featureIds:i,pointPositions:r}}_validatePositions(t,e,r,i,s){if(i==null&&t.serviceObbInIndexSR)return;const o=e.length,a=3;for(let n=0;n<o;n++){const d=n*a;te(v,r[d],r[d+1],r[d+2]);const c=!Number.isNaN(r[2]);i==null||(c?re(i,v):ie(i,v))||(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&x.getLogger(this).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&x.getLogger(this).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++),t.serviceObbInIndexSR||s.push(v[0],v[1],v[2])}}_createGraphics(t,e,r,i){const s=t.length,o=3,a=this._getObjectIdField(),n=this.processor.graphicsCore,d=new Array,c=this.view.spatialReference;for(let h=0;h<s;h++){const l=t[h],f={};l!=null&&(f[a]=l);const I=l??S(),_=h*o,E=isNaN(e[_+2])?void 0:e[_+2],w=se(e[_],e[_+1],E,c),b=this.loadedGraphics.get(I);if(b!=null)(b.level==null||b.level<i)&&(m.property="geometry",m.graphic=b,m.oldValue=b.geometry,m.newValue=w,b.geometry=w,b.level=i,n.graphicUpdateHandler(m)),d.push(b);else{const L=S();d.push({objectId:I,uid:L,geometry:w,attributes:f,visible:!0,nodeIndex:r,level:i})}}return d}_updateNodeMemory(t){t.memory=4096+(t.numFeatures!=null?t.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(t){this._memCache.put(this._getMemCacheKey(t.node),t)}_getMemCacheKey(t){return`${t.index}`}_removeAllNodeData(){this.loadedGraphics.forEachNode((t,e)=>{if(t){const r=t.node;this._updateNodeMemory(r),this._cacheNodeData(t)}this._controller.updateLoadStatus(e,!1)}),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(t){const e=this._removeNodeStageData(t);e&&(this._updateNodeMemory(e.node),this._cacheNodeData(e))}_removeNodeStageData(t){const e=this.loadedGraphics.getNode(t);return e==null?null:(this._controller.updateLoadStatus(t,!1),this.loadedGraphics.removeNode(t),this._treeDebugger&&this._treeDebugger.update(),e)}async loadCachedNodeData(t){return this._memCache?.pop(this._getMemCacheKey(t))}async addCachedNodeData(t,e,r,i){this.loadedGraphics.hasNode(t.index)?x.getLogger(this).error("I3S node "+t.id+" already added"):(await this._i3sOverrides.applyAttributeOverrides(e.featureIds,r,i),e.attributeInfo=r,this.loadedGraphics.addNode(t.index,e),this._controller.updateLoadStatus(t.index,!0),this._updateNodeMemory(t),D(e),this._filterNode(e),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const t=[];return this.loadedGraphics.forEachNode(e=>t.push(e.node.id)),t.sort()}getVisibleNodes(){const t=new Array;return this.loadedGraphics.forEachNode(e=>t.push(e.node)),t}getLoadedNodeIndices(t){this.loadedGraphics.forEachNode((e,r)=>t.push(r))}getLoadedAttributes(t){const e=this.loadedGraphics.getNode(t);if(e?.attributeInfo!=null)return e.attributeInfo.loadedAttributes}getAttributeData(t){const e=this.loadedGraphics.getNode(t);if(e?.attributeInfo!=null)return e.attributeInfo.attributeData}_setAttributeData(t,e){const r=this.loadedGraphics.getNode(t);r?.attributeInfo!=null&&(r.attributeInfo.attributeData=e,this._attributeValuesChanged(r))}async updateAttributes(t,e,r){const i=this.loadedGraphics.getNode(t);i!=null&&(await this._i3sOverrides.applyAttributeOverrides(i.featureIds,e,r),i.attributeInfo=e,this._attributeValuesChanged(i))}_attributeValuesChanged(t){D(t),this._filterNode(t);const{processor:e}=this,{graphicsCore:r}=e;if(r.labelsEnabled){const i=t.node.index,s=new Array;t.graphics.forEach(o=>o.nodeIndex===i&&s.push(o.uid)),r.updateLabelingInfo(s)}e.refreshFilter()}_updateClippingExtent(t){return this._controller&&this._controller.updateClippingArea(t),!1}_getObjectIdField(){return this.layer.objectIdField||oe}_getGlobalIdField(){return this.layer.associatedLayer?.globalIdField}async _rendererChange(t,e){const{layer:{fieldsIndex:r}}=this,i=new Set;let s,o;t?(await t.collectRequiredFields(i,r),s=Array.from(i).sort()):s=[],i.clear(),e?(await e.collectRequiredFields(i,r),o=Array.from(i).sort()):o=[],s.length===o.length&&s.every((a,n)=>s[n]===o[n])||this._reloadAllNodes()}_rangeInfosChanged(t){t!=null&&t.length>0&&x.getLogger(this).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this.loadedGraphics.forEachNode(t=>this._filterNode(t))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(t){const e=this.parsedDefinitionExpression,r=this._excludeObjectIdsSorted,i=this._getObjectIdField();for(const s of t.graphics){const o=s.visible,a=!e||this._evaluateClause(e,s),n=r==null||ae(r,s.attributes[i])<0;s.visible=a&&n,o!==s.visible&&(m.graphic=s,m.property="visible",m.oldValue=o,m.newValue=s.visible,this.processor.graphicsCore.graphicUpdateHandler(m))}}createQuery(){const t={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(t):new G(t)}queryFeatures(t,e){return this._queryEngine.executeQuery(this._ensureQuery(t),e?.signal)}queryObjectIds(t,e){return this._queryEngine.executeQueryForIds(this._ensureQuery(t),e?.signal)}queryFeatureCount(t,e){return this._queryEngine.executeQueryForCount(this._ensureQuery(t),e?.signal)}queryExtent(t,e){return this._queryEngine.executeQueryForExtent(this._ensureQuery(t),e?.signal)}_ensureQuery(t){return this._addDefinitionExpressionToQuery(t==null?this.createQuery():G.from(t))}_setupQueryEngine(){const{layer:t,view:e,hasM:r,hasZ:i}=this,{spatialReference:s,resourceController:o}=e,a=new ye(s,t,o,()=>this.processor.featureStore,i,r);this._queryEngine=new fe({context:a,priority:ne.FEATURE_QUERY_ENGINE})}get usedMemory(){return this.processor?.graphicsCore?.usedMemory??0}get unloadedMemory(){return .8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}get ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}async _handleEdits(t){const e=this._attributeEditingContext,r=await xe(e,t);Ee(e,r)}get _attributeEditingContext(){const t=this._getObjectIdField(),e=this._getGlobalIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:t,globalIdField:e,forEachNode:r=>this.loadedGraphics.forEachNode(i=>r(i.node,i.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo??[],i3sOverrides:this._i3sOverrides,getAttributeData:r=>this.getAttributeData(r),setAttributeData:(r,i,s)=>{this._setAttributeData(r,i);const o=this.loadedGraphics.getNode(r);if(s!=null){const a=this.loadedGraphics.get(s.attributes[t]);a!=null&&this.processor.graphicsCore.recreateGraphics([a])}else o!=null&&this.processor.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){return new de(this.usedMemory,this.loadedGraphics.length,-1,this.maximumNumberOfFeatures,this.loadedGraphics.nodeCount,this.processor.graphicsCore.performanceInfo)}get test(){}};p([g()],u.prototype,"processor",void 0),p([g({type:ue})],u.prototype,"filter",void 0),p([g()],u.prototype,"loadedGraphics",void 0),p([g()],u.prototype,"i3slayer",null),p([g()],u.prototype,"_controller",void 0),p([g()],u.prototype,"updating",void 0),p([g()],u.prototype,"suspended",void 0),p([g()],u.prototype,"holeFilling",void 0),p([g(ce)],u.prototype,"updatingProgress",void 0),p([g()],u.prototype,"updatingProgressValue",null),p([g(M.requiredFields)],u.prototype,"requiredFields",null),p([g(M.availableFields)],u.prototype,"availableFields",void 0),p([g()],u.prototype,"_fieldsHelper",void 0),p([g({type:Number})],u.prototype,"maximumNumberOfFeatures",null),p([g({readOnly:!0})],u.prototype,"maximumNumberOfFeaturesExceeded",null),p([g()],u.prototype,"_excludeObjectIdsSorted",null),p([g({readOnly:!0})],u.prototype,"lodFactor",null),p([g({readOnly:!0})],u.prototype,"hasM",null),p([g({readOnly:!0})],u.prototype,"hasZ",null),p([g()],u.prototype,"contentVisible",null),p([g({readOnly:!0})],u.prototype,"legendEnabled",null),u=p([pe("esri.views.3d.layers.SceneLayerGraphicsView3D")],u);const Et=u;function Me(t){return"pointData"in t}function O(t){return"geometryBuffer"in t&&t.geometryBuffer!==null}function Re(t,e,r){const i=e.attributeInfo;if(i?.loadedAttributes==null||i.attributeData==null)return!1;let s=!1;for(const{name:o}of i.loadedAttributes)if(i.attributeData[o]){const a=R(i.attributeData[o],r);a!==t.attributes[o]&&(t.attributes[o]=a,s=!0)}return s}function D(t){const e=t.attributeInfo,r=t.node.index;if(e?.loadedAttributes!=null&&e.attributeData!=null)for(let i=0;i<t.graphics.length;i++){const s=t.graphics[i];if(s.nodeIndex===r){s.attributes||(s.attributes={});for(const{name:o}of e.loadedAttributes)e.attributeData[o]&&(s.attributes[o]=R(e.attributeData[o],i))}}}function Le(t,e){return t.xmin-=e,t.ymin-=e,t.xmax+=e,t.ymax+=e,t.zmin!=null&&t.zmax!=null&&(t.zmin-=e,t.zmax+=e),t.mmin!=null&&t.mmax!=null&&(t.mmin-=e,t.mmax+=e),t}const Ve={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},v=J(),m={graphic:null,property:null,oldValue:null,newValue:null};export{Et as default};
