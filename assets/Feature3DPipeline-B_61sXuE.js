import{ev as c,c2 as l,ah as g,ib as f,b as o,m as a,c as m,H as d,u as v,ex as x,aN as F,es as k,aU as O}from"./index-CzvLtnX1.js";import{t as _}from"./FeatureLayerViewBase3D-DKz4Ln__.js";import{_ as S}from"./FeaturePipelineRenderManager-iwQkY04O.js";import{s as H}from"./highlightUtils-D2lMfk8z.js";import"./HeatmapDensity.glsl-B4Yrhe_U.js";import"./timeSupport-CgS5mQjm.js";import"./projectExtentUtils-dd9OO2QQ.js";import"./geometryServiceUtils-DDNHyfMa.js";import"./dehydratedFeatureComparison-BBO76xQi.js";import"./utils-CICEYmO-.js";import"./cimSymbolUtils-D5sHtYK8.js";import"./queryForSymbologySnapping-Bij8ZnaA.js";import"./Graphics3DFeatureProcessor-DGpSCVsO.js";import"./hash-CcEbRgUF.js";import"./ExtentSet-qWs8Lc6G.js";import"./rendererConversion-CGpNLgtM.js";import"./optimizedFeatureQueryEngineAdapter-C01vnci5.js";import"./PooledRBush-IF1bQTeP.js";import"./popupUtils-C5Xxoh_A.js";import"./Graphics3DObjectStates-DZcqh-aC.js";import"./attributeUtils-Dc8--CBJ.js";import"./floorFilterUtils-DKzVzLpH.js";import"./QueryEngine-BW9qTl6x.js";import"./WhereClauseCache-9TmBMoEG.js";import"./WhereClause-D7Picv4q.js";import"./TimeOnly-DUjwkvaH.js";import"./timeSupport-C95NcD1h.js";import"./queryUtils-6TLl6Zev.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./utils-BeXlThvO.js";import"./utils-CtGOd0WT.js";import"./utils-BJJHgLwi.js";import"./ClassBreaksDefinition-CXt_rIOj.js";import"./FixedIntervalBinParameters-BzwSDYbq.js";import"./FeatureStore-B1CjHmrb.js";import"./BoundsStore-CrM5VOwr.js";import"./heatmapTextureUtils-C4N7TM8m.js";import"./LayerView3D-C3wz0Xd_.js";import"./query-Dy8NjPeC.js";import"./pbfQueryUtils-CboXUN80.js";import"./pbf-DU6DDbsT.js";import"./EventedSet-CB4NBdOg.js";import"./FeatureLayerView-C-uC0TMb.js";import"./constants-B4mRqufT.js";import"./LayerView-DMEwuW7Q.js";import"./RefreshableLayerView-CoTThkI-.js";import"./LodRenderer-Cb6GUm6T.js";let n=class extends c{constructor(e){super(e),this.schedule=null,this._workerUpdating=!0}get updating(){return this._workerUpdating}initialize(){this._workerHandle=new Q(this.schedule,this);const{layer:e,viewSpatialReference:t,renderSpatialReference:r}=this;this.addResolvingPromise((async()=>{await e.load();const{fullExtent:i}=e;await this._workerHandle.invokeMethod("setup",{url:e.parsedUrl?.path??"",baseQuery:e.createQuery().toJSON(),viewSpatialReference:t.toJSON(),renderSpatialReference:r.toJSON(),viewingMode:this.viewingMode,objectIdField:e.objectIdField,capabilities:e.capabilities,timeInfo:e.timeInfo?.toJSON(),fieldsIndex:e.fieldsIndex.toJSON(),fullExtent:i?.toJSON()})})()),this.addHandles(this._workerHandle.on("notify-updating",({updating:i})=>{this._workerUpdating=i}))}onTileTreeChange({added:e,removed:t}){if(e.length===0&&t.length===0)return;const r=e.map(p),i=t.map(p);this._workerHandle.invokeMethod("onTileTreeChange",{added:r,removed:i})}async executeQuery(e,t){const r=await this._workerHandle.invokeMethod("executeQuery",e?.toJSON(),t),i=l.fromJSON(r);return this._ensureLayerOnFeatures(i),i}async executeQueryForIds(e,t){return await this._workerHandle.invokeMethod("executeQueryForIds",e?.toJSON(),t)}async executeQueryForCount(e,t){return await this._workerHandle.invokeMethod("executeQueryForCount",e?.toJSON(),t)}async executeQueryForExtent(e,t){const{count:r,extent:i}=await this._workerHandle.invokeMethod("executeQueryForExtent",e?.toJSON(),t);return{count:r,extent:g.fromJSON(i)}}async executeQueryForLatestObservations(e,t){const r=await this._workerHandle.invokeMethod("executeQueryForLatestObservations",e?.toJSON(),t),i=l.fromJSON(r);return this._ensureLayerOnFeatures(i),i}_ensureLayerOnFeatures(e){const{layer:t}=this;for(const r of e.features)r.layer=t,r.sourceLayer=t}};o([a()],n.prototype,"updating",null),o([a({constructOnly:!0})],n.prototype,"schedule",void 0),o([a({constructOnly:!0})],n.prototype,"layer",void 0),o([a({constructOnly:!0})],n.prototype,"viewSpatialReference",void 0),o([a({constructOnly:!0})],n.prototype,"renderSpatialReference",void 0),o([a({constructOnly:!0})],n.prototype,"viewingMode",void 0),o([a({constructOnly:!0})],n.prototype,"dispatchRenderCommands",void 0),o([a()],n.prototype,"_workerUpdating",void 0),n=o([m("esri.views.3d.layers.graphics.pipeline.Feature3DPipelineWorkerHandle")],n);class Q extends f{constructor(t,r){super("Feature3DPipelineWorker","setup",{},t,{strategy:"dedicated",client:r})}}function p({id:e,lij:t,extent:r}){return{id:e,lij:t,extent:r}}let u=class extends c{constructor(e){super(e),this._renderer=null,this.graphicsQuery={queryForSymbologySnapping:(t,r)=>{throw new d("unsupported-symbology-snapping")},executeQuery:async(t,r)=>await this._workerHandle.executeQuery(t,r),executeQueryForIds:async(t,r)=>await this._workerHandle.executeQueryForIds(t,r),executeQueryForCount:async(t,r)=>await this._workerHandle.executeQueryForCount(t,r),executeQueryForExtent:async(t,r)=>await this._workerHandle.executeQueryForExtent(t,r),executeQueryForLatestObservations:async(t,r)=>await this._workerHandle.executeQueryForLatestObservations(t,r)},this.maximumNumberOfFeatures=1e3}initialize(){if(this.layerView.layer.geometryType!=="point")throw new d("unsupported-geometry-type",`${this.layerView.layer.geometryType} is not supported`);this.addResolvingPromise(this.setup())}destroy(){this.removeAllHandles(),this._workerHandle.destroy(),v(this._renderer)}async setup(){const{layer:e,view:t}=this.layerView,{spatialReference:r,renderSpatialReference:i,resourceController:y}=t,h=t.state.viewingMode;if(this._renderer=new S({view:t,layerUid:e.uid}),e.type!=="feature")throw new Error("Only FeatureLayer is supported");const w=new n({schedule:s=>y.immediate.schedule(s),layer:e,viewSpatialReference:r,renderSpatialReference:i,viewingMode:h,dispatchRenderCommands:s=>this._renderer.executeRenderCommands(s)});this._workerHandle=await w.when(),this.addHandles([this.layerView.view.featureTiles.addClient(),x(()=>this.layerView.view.featureTiles.tiles,"change",s=>{this._workerHandle.onTileTreeChange(s)},{onListenerAdd:s=>this._workerHandle.onTileTreeChange({added:s.toArray(),removed:[]}),onListenerRemove:s=>this._workerHandle.onTileTreeChange({added:[],removed:s.toArray()})})])}get legendEnabled(){return!1}get hasAllFeatures(){return!1}get hasAllFeaturesInView(){return!1}get hasFullGeometries(){return!1}get symbologySnappingSupported(){return!1}get scaleVisibilitySuspended(){return!1}get suspendInfo(){return{}}get updating(){return this._workerHandle.updating}get dataUpdating(){return!1}get updatePolicy(){return F.ASYNC}get maximumNumberOfFeaturesExceeded(){return!1}get updatingProgressValue(){return 1}get usedMemory(){return this._renderer?.usedMemory??0}get unloadedMemory(){return 0}get ignoresMemoryFactor(){return!0}get totalFeatures(){return this._renderer?.totalFeatures??0}get performanceInfo(){const e=this.totalFeatures;return new _(new k(this.usedMemory,e,e,this.maximumNumberOfFeatures,0,null),e,e,this.maximumNumberOfFeaturesExceeded,"tiles","n/a")}get suspendResumeExtentMode(){return"computed"}forEachGraphic(e){}findGraphic(e){return null}highlight(e){return H}maskOccludee(e){return O()}async whenGraphicBounds(e,t){return null}computeAttachmentOrigin(e,t){return null}elevationAlignPointsInFeatures(e,t){throw new d("unsupported-elevation-alignment")}async doRefresh(e){}setVisibility(e,t){}getMissingAttributesForFeature(e){return null}getHydratedGeometry(e){return null}};o([a()],u.prototype,"layerView",void 0),o([a()],u.prototype,"updating",null),o([a()],u.prototype,"totalFeatures",null),u=o([m("esri.views.3d.layers.graphics.pipeline.Feature3DPipeline")],u);export{u as Feature3DPipeline};
