import{e_ as m,u as c,aC as g,aG as n,b0 as l,aU as p,d,b as o,m as w,c as u}from"./index-CzvLtnX1.js";import{S as y}from"./LayerView2D--e9gSTDz.js";import{t as V}from"./GraphicContainer-B78C-enC.js";import{A as v}from"./GraphicsView2D-CBTRavXz.js";import{y as f}from"./LayerView-DMEwuW7Q.js";import"./Container-BrN4Ui-E.js";import"./EffectView-BiQ7qc0o.js";import"./AGraphicContainer-DyapwdFp.js";import"./TechniqueInstance-ChSshhqb.js";import"./UpdateTracking2D-DgMtH1pt.js";import"./Utils-B-HfPvxQ.js";import"./BoundingBox-CfNhF6-u.js";import"./TileContainer-Bq-a2BCj.js";import"./WGLContainer-UBqTgyqK.js";import"./WGLBrushVTLSymbol-Ds8R82mK.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-PyQiTsc3.js";import"./FeatureCommandQueue-C6yVidQ1.js";import"./CIMSymbolHelper-Dul3J0hn.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-C1i-aeFk.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-fiAQC1Zo.js";import"./heatmapTextureUtils-C4N7TM8m.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BH4vjdGx.js";import"./OverrideHelper-DIx2mYgX.js";import"./callExpressionWithFeature-BqIGys1L.js";import"./AttributeStore-XuGbXzoi.js";import"./queryUtils-6TLl6Zev.js";import"./json-Wa8cmqdu.js";import"./timeSupport-C95NcD1h.js";import"./TimeOnly-DUjwkvaH.js";import"./normalizeUtilsSync-Cc40aJ8I.js";let e=class extends y(f){attach(){this.graphicsView=new v({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new V(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>this.layer?.visible,()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(s=>({type:"graphic",graphic:s,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,s){let t;typeof i=="number"?t=[i]:i instanceof g?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):n.isCollection(i)&&i.length>0&&(t=i.map(r=>r&&r.uid).toArray());const a=t?.filter(l);if(!a?.length)return p();const h=s?.name??d;return this._addHighlights(a,h),p(()=>!this.destroyed&&this._removeHighlights(a,h))}_processHighlight(){const i=this._getHighlights();this.graphicsView?.setHighlight(i)}};o([w()],e.prototype,"graphicsView",void 0),e=o([u("esri.views.2d.layers.GraphicsLayerView2D")],e);const ri=e;export{ri as default};
