import{CN as b,t_ as C,CO as E,CP as y,CQ as O,CR as w,CS as x,CT as A,eD as n,CU as g,CV as _,CW as S,CX as N,CY as R,oL as M,CZ as V,C_ as F,_ as L,C$ as P,D0 as j,D1 as B,D2 as U,D3 as W,D4 as z,D5 as q,D6 as H,D7 as k,D8 as Q,D9 as X,Da as G,Db as Y,Dc as Z,Dd as J,oX as D,qD as K,De as ee,b as c,Df as u,oM as f,Dg as I,Dh as v,Di as te,Dj as se,Dk as ie,Dl as ae,uc as re,Dm as oe,Dn as ne,qF as le}from"./index-CzvLtnX1.js";import{f as ce}from"./DefaultLayouts-CGjC8rk2.js";import{e as ue}from"./TriangleMaterial-DGLj9Hvg.js";class m extends b{}function T(s){const e=new C,{vertex:t,fragment:i}=e,{output:d,perspectiveInterpolation:a}=s;return E(t,s),e.include(y,s),e.include(O,s),e.fragment.include(w,s),e.include(x,s),e.include(A,s),e.attributes.add(n.POSITION,"vec3"),e.attributes.add(n.UV0,"vec2"),a&&e.attributes.add(n.PERSPECTIVEDIVIDE,"float"),t.main.add(_`
    vpos = position;
    forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);
    vTexCoord = uv0;
    gl_Position = transformPosition(proj, view, vpos);
    ${g(a,"gl_Position *= perspectiveDivide;")}`),e.varyings.add("vpos","vec3"),e.varyings.add("vTexCoord","vec2"),i.include(S),i.uniforms.add(new N("opacity",r=>r.opacity),new R("tex",r=>r.texture)).main.add(_`
    discardBySlice(vpos);
    discardByTerrainDepth();
    ${g(d===M.ObjectAndLayerIdColor,"fragColor = vec4(0, 0, 0, 1); return;")}
    vec4 finalColor = texture(tex, vTexCoord) * opacity;
    outputColorHighlightOID(finalColor, vpos);`),e}const pe=Object.freeze(Object.defineProperty({__proto__:null,ImageMaterialPassParameters:m,build:T},Symbol.toStringTag,{value:"Module"}));let de=class extends V{constructor(e,t){super(e,t,new F(pe,()=>L(()=>Promise.resolve().then(()=>De),void 0)),$)}_getPipelineState(e,t){const{oitPass:i,output:d,hasOccludees:a,enableOffset:r,cullFace:p}=e,l=i===P.NONE,h=i===P.FrontFace;return j({blending:Z(d)?l?G:Y(i):null,culling:X(p),depthTest:{func:Q(i)},depthWrite:k(e),drawBuffers:H(i,d),colorWrite:q,stencilWrite:a?z:null,stencilTest:a?t?U:W:null,polygonOffset:l||h?null:B(r)})}initializePipeline(e){return this._occludeePipeline=this._getPipelineState(e,!0),this._getPipelineState(e,!1)}getPipeline(e){return e?this._occludeePipeline:super.getPipeline()}};const $=new Map([[n.POSITION,0],[n.UV0,2],[n.PERSPECTIVEDIVIDE,3]]);class o extends J{constructor(){super(...arguments),this.cullFace=D.None,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.perspectiveInterpolation=!0,this.textureCoordinateType=K.None,this.emissionSource=ee.None,this.discardInvisibleFragments=!0,this.occlusionPass=!1,this.objectAndLayerIdColorInstanced=!1}}c([u({count:D.COUNT})],o.prototype,"cullFace",void 0),c([u()],o.prototype,"enableOffset",void 0),c([u()],o.prototype,"writeDepth",void 0),c([u()],o.prototype,"hasOccludees",void 0),c([u()],o.prototype,"terrainDepthTest",void 0),c([u()],o.prototype,"cullAboveTerrain",void 0),c([u()],o.prototype,"perspectiveInterpolation",void 0);class me extends ue{constructor(e){super(e,ve),this._configuration=new o,this.vertexAttributeLocations=$,this.supportsEdges=!0,this.produces=new Map([[f.OPAQUE_MATERIAL,t=>I(t)],[f.TRANSPARENT_MATERIAL,t=>v(t)&&this.parameters.writeDepth],[f.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,t=>v(t)&&!this.parameters.writeDepth],[f.DRAPED_MATERIAL,t=>v(t)||I(t)]])}getConfiguration(e,t){return this._configuration.output=e,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=t.hasOccludees,this._configuration.oitPass=t.oitPass,this._configuration.enableOffset=t.camera.relativeElevation<te,this._configuration.terrainDepthTest=t.terrainDepthTest,this._configuration.cullAboveTerrain=t.cullAboveTerrain,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}get visible(){return!0}createGLMaterial(e){return new he(e)}createBufferWriter(){const e=ce.clone();return this.parameters.perspectiveInterpolation&&e.f32(n.PERSPECTIVEDIVIDE),new fe(e)}}class he extends ie{constructor(e){super({...e,...e.material.parameters})}beginSlot(e){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.getTechnique(de,e)}}class fe extends ae{write(e,t,i,d,a,r){for(const p of this.vertexBufferLayout.fields.keys()){const l=i.get(p);if(l)if(p===n.PERSPECTIVEDIVIDE){re(l.size===1);const h=a.getField(p,oe);h&&ne(l,h,r)}else le(p,l,e,t,a,r)}}}class ve extends se{constructor(e){super(),this.textureId=e,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=D.None,this.opacity=1,this.perspectiveInterpolation=!1}}const De=Object.freeze(Object.defineProperty({__proto__:null,ImageMaterialPassParameters:m,build:T},Symbol.toStringTag,{value:"Module"}));export{me as I};
