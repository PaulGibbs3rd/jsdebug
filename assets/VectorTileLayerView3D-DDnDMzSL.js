import{gP as F,N,dL as z,rE as O,rF as A,lp as D,rG as p,rH as H,oE as U,o1 as w,c5 as x,H as G,rI as W,rJ as j,em as Z,aP as K,aW as Y,az as J,fe as Q,u as P,b as d,m as y,c as X}from"./index-CzvLtnX1.js";import{p as ee,t as te,y as le}from"./TileInfoViewPOT-BUYkevOY.js";import{d as ie,u as se,n as ae,s as re,f as ne}from"./WGLBrushVTLSymbol-Ds8R82mK.js";import{p as oe}from"./VTLMaterialManager-By-Uq-tk.js";import{l as k}from"./StyleRepository-C0j9wqrG.js";import{l as he}from"./LayerView3D-C3wz0Xd_.js";import{p as ce}from"./TiledLayerView3D-k4JOMenH.js";import{y as ue}from"./LayerView-DMEwuW7Q.js";import"./Rect-CUzevAry.js";import"./pbf-DU6DDbsT.js";import"./rasterizingUtils-C1i-aeFk.js";import"./ShaderCompiler-G2XYGDs6.js";import"./programUtils-CwiKxPbA.js";class de{constructor(e,t,s){this._scale=e,this._shift=t,this._levelShift=s}getLevelRowColumn(e){const t=this.getLevelShift(e[0]),s=this._shift+t;return s?[e[0]-t,e[1]>>s,e[2]>>s]:e}getLevelShift(e){return Math.min(e,this._levelShift)}getOffset(e,t){let s=0,i=0;const l=this._shift+this.getLevelShift(e[0]);if(l){const n=(1<<l)-1,a=t/(this._scale*(1<<l-1));s=(e[2]&n)*a,i=(e[1]&n)*a}return[s,i]}getScale(e){return this._scale*(1<<this._shift+this.getLevelShift(e))}}class $ extends ee{constructor(e,t,s,i){super(e,t,s,e.tileInfo.lods.length-1),this._memCache=i,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new te(e.tileInfo,e.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(e=>e.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(e,t){const s=new F(e[0],e[1],e[2],0);let i=this._memCache.get(s.id);if(i)return i.retain(),i;const l=await this._getVectorTileData(s);if(N(t),!this._layer)return null;if(i=this._memCache.get(s.id),i)return i.retain(),i;const n=this._layer.tileInfo.getTileBounds(z(),s),a=this._tileInfoView.getTileResolution(e[0]);return i=new le(s,a,n[0],n[3],512,512,this._styleRepository,this._memCache),i.setData(l),l&&(i.retain(),this._memCache.put(s.id,i,O)),i.neededForCoverage=!0,i.transforms.tileUnitsToPixels=A(1/8,0,0,0,1/8,0,0,0,1),i}_getVectorTileData(e){const t=e.id;if(this._ongoingTileRequests.has(t))return this._ongoingTileRequests.get(t);const s=new AbortController,i={signal:s.signal},l=this._getParsedVectorTileData(e,i).then(n=>(this._ongoingTileRequests.delete(t),this._ongoingRequestToController.delete(t),n)).catch(()=>(this._ongoingTileRequests.delete(t),this._ongoingRequestToController.delete(t),null));return this._ongoingTileRequests.set(t,l),this._ongoingRequestToController.set(t,s),l}_getParsedVectorTileData(e,t){return this.fetchTileData(e,t).then(s=>this.parseTileData({key:e,data:s},t))}}const v={vtlBackground:se,vtlFill:ne,vtlLine:re,vtlCircle:ae,vtlSymbol:ie},f=1e-6;class B{constructor(e,t){this.spriteMosaic=e,this.glyphMosaic=t,this._brushCache={vtlBackground:null,vtlFill:null,vtlLine:null,vtlCircle:null,vtlSymbol:null},this._vtlMaterialManager=new oe}dispose(){this._brushCache.vtlBackground?.dispose(),this._brushCache.vtlFill?.dispose(),this._brushCache.vtlLine?.dispose(),this._brushCache.vtlCircle?.dispose(),this._brushCache.vtlSymbol?.dispose(),this._brushCache=null,this._vtlMaterialManager=D(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawSymbols(e,t,s){const i=s.layers;e.renderPass="translucent";let l=this._brushCache.vtlSymbol;l==null&&(l=new v.vtlSymbol,this._brushCache.vtlSymbol=l),g[0]=t;for(let n=0;n<i.length;n++){const a=i[n];if(a.type!==p.SYMBOL)continue;const o=a.getLayoutProperty("visibility");if(o&&o.getValue()===H.NONE)continue;const h=e.displayLevel;a.minzoom!==void 0&&a.minzoom>h+f||a.maxzoom!==void 0&&a.maxzoom<=h-f||(e.styleLayerUID=a.uid,e.styleLayer=a,l.drawMany(e,g))}g[0]=null}drawBackground(e,t,s){if(s.backgroundBucketIds.length===0)return;const{context:i,displayLevel:l,requiredLevel:n}=e;t.key.level=n,i.setBlendingEnabled(!0),i.setDepthTestEnabled(!1),i.setStencilTestEnabled(!1),e.renderPass="background";let a=this._brushCache.vtlBackground;a==null&&(a=new v.vtlBackground,this._brushCache.vtlBackground=a),g[0]=t,s.backgroundBucketIds.forEach(o=>{const h=s.getLayerById(o);if(h.type!==p.BACKGROUND)return;const C=h.getLayoutProperty("visibility");C&&C.getValue()===H.NONE||h.minzoom!==void 0&&h.minzoom>l+f||h.maxzoom!==void 0&&h.maxzoom<=l-f||(e.styleLayerUID=h.uid,e.styleLayer=h,a.drawMany(e,g))}),g[0]=null}drawTile(e,t,s,i){const{context:l}=e,n=s.layers;l.setBlendingEnabled(!1),l.setDepthTestEnabled(!0),l.setDepthWriteEnabled(!0),l.setDepthFunction(U.LEQUAL);const a=n.filter(o=>i!=null&&i!==o.type||!t.layerData.has(o.uid)?!1:o.getLayoutProperty("visibility")?.getValue()!==H.NONE);e.renderPass="opaque";for(let o=a.length-1;o>=0;--o)this._renderStyleLayer(a[o],e,t);l.setDepthWriteEnabled(!1),l.setBlendingEnabled(!0),l.setBlendFunctionSeparate(w.ONE,w.ONE_MINUS_SRC_ALPHA,w.ONE,w.ONE_MINUS_SRC_ALPHA),e.renderPass="translucent",a.forEach(o=>this._renderStyleLayer(o,e,t)),l.setDepthTestEnabled(!1),l.bindVAO()}_renderStyleLayer(e,t,s){const{renderPass:i}=t;let l;switch(e.type){case p.BACKGROUND:if(i!=="background")return;l=this._brushCache.vtlBackground,l||(l=new v.vtlBackground,this._brushCache.vtlBackground=l);break;case p.FILL:if(i!=="opaque"&&t.renderPass!=="translucent")return;l=this._brushCache.vtlFill,l==null&&(l=new v.vtlFill,this._brushCache.vtlFill=l);break;case p.LINE:if(i!=="translucent")return;l=this._brushCache.vtlLine,l==null&&(l=new v.vtlLine,this._brushCache.vtlLine=l);break;case p.CIRCLE:if(i!=="translucent")return;l=this._brushCache.vtlCircle,l==null&&(l=new v.vtlCircle,this._brushCache.vtlCircle=l);break;case p.SYMBOL:if(i!=="translucent")return;l=this._brushCache.vtlSymbol,l==null&&(l=new v.vtlSymbol,this._brushCache.vtlSymbol=l)}const{displayLevel:n}=t,{minzoom:a,maxzoom:o}=e;if(a!==void 0&&a>n+f||o!==void 0&&o<=n-f)return;const{context:h}=t;h.setStencilTestEnabled(!1),h.setStencilWriteMask(0),t.styleLayerUID=e.uid,t.styleLayer=e,g[0]=s,l.drawMany(t,g),g[0]=null}}const g=[null];let c=class extends ce(he(ue)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d",this.levelShift=x("disable-feature:vtl-level-shift")?0:1}initialize(){if(this.layer.fullExtent==null)return void this.addResolvingPromise(Promise.reject(new G("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:r,spatialReference:e,state:t,viewingMode:s}=this.view,i=s==="local"&&!W(e)||j.force512VTL?this.layer.tileInfo:this.layer.tileInfo.getCompatibleForVTL(256),l=this._getTileInfoSupportError(i,this.layer.fullExtent);if(l!=null)return this.addResolvingPromise(Promise.reject(l));const n=Z(()=>this.view?.basemapTerrain?.tilingSchemeLocked).then(()=>{const u=r.tilingScheme,m=u.pixelSize,T=m===256?1:2,_=r.spatialReference?.isGeographic&&m===256?1:0,S=r.spatialReference?.isGeographic||m!==256?0:1;let b;this.schemaHelper=new de(T,_,this.levelShift+S),b=m===256||m===512?this.layer.tileInfo.getCompatibleForVTL(m):this.layer.tileInfo;const L=this._getTileInfoCompatibilityError(b,u);if(L)throw L;this.tileInfo=b});this._tileHandlerController=new AbortController;const a=this.view.resourceController;this._memCache=a.memoryController.newCache(`vtl-${this.layer.uid}`,u=>u.release()),this.addHandles(K(()=>this.view.qualitySettings.memoryLimit,u=>this._memCache.maxSize=Math.ceil(u/10*1048576),Y));const o=new k(this.layer.currentStyleInfo.style);this._tileHandler=new $(this.layer,o,t.contentPixelRatio,this._memCache);const h=this._tileHandlerController.signal,C=ge(a),E=this._tileHandler.start({signal:h,schedule:C}),I=this._tileHandler.spriteMosaic;I.then(u=>{!J(h)&&this._tileHandler&&(this.painter=new B(u,this._tileHandler.glyphMosaic))}),E.then(()=>this._tileHandlerController=null);const R=()=>{this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const u=this.layer.currentStyleInfo.style,m=this.view.state?.contentPixelRatio??1,T=new k(u),_=new $(this.layer,T,m,this._memCache),S=_.start({signal:this._tileHandlerController.signal,schedule:C}),b=_.spriteMosaic;S.then(()=>this._tileHandlerController=null),this._updatingHandles.addPromise(Promise.all([S,b]).then(([,L])=>{const q=this._tileHandler,M=this.painter;this.painter=new B(L,_.glyphMosaic),this._tileHandler=_,this.emit("data-changed"),q.destroy(),M&&M.dispose()}))};this._updatingHandles.add(()=>({style:this.layer.currentStyleInfo.style,pixelRatio:this.view.state?.contentPixelRatio}),R),this.addHandles([this.layer.on("paint-change",()=>this.emit("data-changed")),this.layer.on("style-layer-change",R),this.layer.on("delete-style-layer",R),this.layer.on("spriteSource-change",()=>this.emit("data-changed")),this.layer.on("layout-change",()=>this.emit("data-changed")),this.layer.on("style-layer-visibility-change",()=>this.emit("data-changed"))]);const V=Promise.all([n,E,I]);this.addResolvingPromise(V)}destroy(){this.painter=D(this.painter),this._tileHandlerController=Q(this._tileHandlerController),this._tileHandler=P(this._tileHandler),this._memCache=P(this._memCache)}get contentZoom(){return x("disable-feature:vtl-level-shift")?1:this.view.qualitySettings.tiledSurface.vtlContentZoom}get displayLevelRange(){const r=this.tileInfo.lods,e=this.layer.minScale||r[0].scale,t=this.layer.maxScale||r[r.length-1].scale,s=this.levelRangeFromScaleRange(e,t);return this.layer.maxScale?s.maxLevel++:s.maxLevel+=this.levelShift,s}get dataScaleRange(){const r=this.tileInfo.lods;return{minScale:r[0].scale,maxScale:r[r.length-1].scale}}get dataLevelRange(){const{minScale:r,maxScale:e}=this.dataScaleRange,t=this.levelRangeFromScaleRange(r,e);return t.minLevel===1&&this.tileInfo.size[0]===256&&(t.minLevel=0),t.maxLevel+=this.levelShift,t}async fetchTile(r,e){const t=this.schemaHelper.getLevelRowColumn(r);return this._tileHandler.getVectorTile(t,e)}get hasVisibleFeatures(){return!0}};d([y()],c.prototype,"layer",void 0),d([y()],c.prototype,"levelShift",void 0),d([y()],c.prototype,"contentZoom",null),d([y()],c.prototype,"displayLevelRange",null),d([y()],c.prototype,"tileInfo",void 0),d([y()],c.prototype,"dataScaleRange",null),d([y()],c.prototype,"dataLevelRange",null),d([y()],c.prototype,"updatingProgressValue",void 0),c=d([X("esri.views.3d.layers.VectorTileLayerView3D")],c);const He=c;function ge(r){return e=>r.immediate.schedule(e)}export{He as default};
