import{aP as l,P as h,c2 as g,aG as w,gX as f,gY as d,gZ as n,b as u,c as b}from"./index-CfYeSufM.js";import{S as V}from"./LayerView2D-C4Cdeea2.js";import{t as S}from"./GraphicContainer-Z_l2v49C.js";import{A as _}from"./GraphicsView2D-D4npPHfS.js";import{y as T}from"./LayerView-Ck8FMSD2.js";import"./Container-Cz9A_ioc.js";import"./EffectView-Jcs4MyZ6.js";import"./AGraphicContainer-CVpmy9ro.js";import"./TechniqueInstance-suOgeU_P.js";import"./UpdateTracking2D-BGJ5gcc8.js";import"./Utils-TBp02Upz.js";import"./BoundingBox-hvRvsOsN.js";import"./TileContainer-aWWjUWr5.js";import"./WGLContainer-DAL2R1TP.js";import"./WGLBrushVTLSymbol-D4Azmvhv.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-CbnhisJb.js";import"./FeatureCommandQueue-DEjbHgMN.js";import"./CIMSymbolHelper-DLCfSN7J.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-DzQCuzrR.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-rlKkNXTl.js";import"./heatmapTextureUtils-BwsdgbXL.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-w0BYbTZ1.js";import"./OverrideHelper-2qszNNyl.js";import"./callExpressionWithFeature-B3Mz5oa9.js";import"./AttributeStore-B7dEZ_45.js";import"./queryUtils-DtT3aDWa.js";import"./json-Wa8cmqdu.js";import"./timeSupport-bCcjezcf.js";import"./TimeOnly-DNvrMvt4.js";import"./normalizeUtilsSync-h4KLBvMC.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(i=>{const t=this._popupTemplates.get(i),p=i.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=t;return p}).map(i=>({type:"graphic",graphic:i,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([l(()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections},e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:i}of e){const t=g.fromJSON(o),p=new w(t.features),s=i.drawingInfo,c=r?f.fromJSON(r):null,a=d(s.renderer),m=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new S(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=m,this._popupTemplates.set(m,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol},e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol},e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol},e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const se=y;export{se as default};
