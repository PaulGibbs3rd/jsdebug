import{bu as A,b4 as Y,gp as yt,bz as q,by as nt,g4 as R,f$ as st,fn as lt,fo as ut,s8 as $t,s9 as It,gB as ft,g6 as Nt,sa as K,rj as At,hw as gt,eC as pt,eD as D,sb as xt}from"./index-CfYeSufM.js";import{RegularEdgeInstancesLayout as X,SilhouetteEdgeInstancesLayout as G,EdgeInputBufferLayout as St}from"./bufferLayouts-BSMug04M.js";class vt{constructor(){this.position0=A(),this.position1=A(),this.faceNormal0=A(),this.faceNormal1=A(),this.componentIndex=0,this.cosAngle=0}}const k=-1;function bt(t,n,s){const a=t.vertices.position,i=t.vertices.componentIndex,u=m.position0,p=m.position1,d=m.faceNormal0,$=m.faceNormal1,{edges:r,normals:f}=Vt(t),w=r.length/4,I=n.allocate(w);let O=0;const C=w,x=s==null?void 0:s.allocate(C);let F=0,e=0,o=0;T.length=0;for(let g=0;g<w;++g){const v=4*g;a.getVec(r.data[v],u),a.getVec(r.data[v+1],p);const _=T.pushNew();_.index=4*g,_.length=yt(u,p)}T.sort((g,v)=>v.length-g.length);const l=new Array,c=new Array;T.forAll(({length:g,index:v})=>{const _=r.data[v],wt=r.data[v+1],Z=r.data[v+2],tt=r.data[v+3],et=tt===k;if(a.getVec(_,u),a.getVec(wt,p),et){const N=3*Z;q(d,f.data[N],f.data[N+1],f.data[N+2]),nt($,d),m.componentIndex=i.get(_),m.cosAngle=R(d,$)}else{let N=3*Z;if(q(d,f.data[N],f.data[N+1],f.data[N+2]),N=3*tt,q($,f.data[N],f.data[N+1],f.data[N+2]),m.componentIndex=i.get(_),m.cosAngle=R(d,$),Et(m,Mt))return;m.cosAngle<-.9999&&nt($,d)}e+=g,o++,et||Lt(m,Ct)?(n.write(I,O++,m),l.push(g)):Ot(m,dt)&&(x&&s&&s.write(x,F++,m),c.push(g))});const y=new Float32Array(l.reverse()),S=new Float32Array(c.reverse()),b=x&&s?{instancesData:x.slice(0,F),lodInfo:{lengths:S}}:void 0;return{regular:{instancesData:I.slice(0,O),lodInfo:{lengths:y}},silhouette:b,averageEdgeLength:e/o}}function Lt(t,n){return t.cosAngle<n}function Et(t,n){return t.cosAngle>n}function Ot(t,n){const s=$t(t.cosAngle);return It(ot,t.position1,t.position0),s*(R(lt(Bt,t.faceNormal0,t.faceNormal1),ot)>0?-1:1)>n}function Vt(t){const n=t.faces.length/3,s=t.faces,a=t.neighbors,i=t.vertices.position;h.length=z.length=0;for(let u=0;u<n;u++){const p=3*u,d=a[p],$=a[p+1],r=a[p+2],f=s[p],w=s[p+1],I=s[p+2];i.getVec(f,V),i.getVec(w,U),i.getVec(I,W),st(U,U,V),st(W,W,V),lt(V,U,W),ut(V,V),z.pushArray(V),(d===k||f<w)&&(h.push(f),h.push(w),h.push(u),h.push(d)),($===k||w<I)&&(h.push(w),h.push(I),h.push(u),h.push($)),(r===k||I<f)&&(h.push(I),h.push(f),h.push(u),h.push(r))}return{edges:h,normals:z}}class _t{constructor(){this.index=0,this.length=0}}const T=new Y({allocator:t=>t||new _t,deallocator:null}),h=new Y({deallocator:null}),z=new Y({deallocator:null}),m=new vt,Bt=A(),ot=A(),V=A(),U=A(),W=A(),dt=ft(4),Mt=Math.cos(dt),Pt=ft(35),Ct=Math.cos(Pt);function at(t,n,s){const a=n/3,i=new Uint32Array(s+1),u=new Uint32Array(s+1),p=(e,o)=>{e<o?i[e+1]++:u[o+1]++};for(let e=0;e<a;e++){const o=t[3*e],l=t[3*e+1],c=t[3*e+2];p(o,l),p(l,c),p(c,o)}let d=0,$=0;for(let e=0;e<s;e++){const o=i[e+1],l=u[e+1];i[e+1]=d,u[e+1]=$,d+=o,$+=l}const r=new Uint32Array(6*a),f=i[s],w=(e,o,l)=>{if(e<o){const c=i[e+1]++;r[2*c]=o,r[2*c+1]=l}else{const c=u[o+1]++;r[2*f+2*c]=e,r[2*f+2*c+1]=l}};for(let e=0;e<a;e++){const o=t[3*e],l=t[3*e+1],c=t[3*e+2];w(o,l,e),w(l,c,e),w(c,o,e)}const I=(e,o)=>{const l=2*e,c=o-e;for(let y=1;y<c;y++){const S=r[l+2*y],b=r[l+2*y+1];let g=y-1;for(;g>=0&&r[l+2*g]>S;g--)r[l+2*g+2]=r[l+2*g],r[l+2*g+3]=r[l+2*g+1];r[l+2*g+2]=S,r[l+2*g+3]=b}};for(let e=0;e<s;e++)I(i[e],i[e+1]),I(f+u[e],f+u[e+1]);const O=new Int32Array(3*a),C=(e,o)=>e===t[3*o]?0:e===t[3*o+1]?1:e===t[3*o+2]?2:-1,x=(e,o)=>{const l=C(e,o);O[3*o+l]=-1},F=(e,o,l,c)=>{const y=C(e,o);O[3*o+y]=c;const S=C(l,c);O[3*c+S]=o};for(let e=0;e<s;e++){let o=i[e];const l=i[e+1];let c=u[e];const y=u[e+1];for(;o<l&&c<y;){const S=r[2*o],b=r[2*f+2*c];S===b?(F(e,r[2*o+1],b,r[2*f+2*c+1]),o++,c++):S<b?(x(e,r[2*o+1]),o++):(x(b,r[2*f+2*c+1]),c++)}for(;o<l;)x(e,r[2*o+1]),o++;for(;c<y;)x(r[2*f+2*c],r[2*f+2*c+1]),c++}return O}const H=.7;let ht=class{updateSettings(n){this.settings=n,this._edgeHashFunction=n.reducedPrecision?Ft:Dt}write(n,s,a){j.seed=this._edgeHashFunction(a);const i=j.getIntRange(0,255),u=j.getIntRange(0,this.settings.variants-1),p=j.getFloat(),d=255*(.5*Tt(-(1-Math.min(p/H,1))+Math.max(0,p-H)/(1-H),1.2)+.5);n.position0.setVec(s,a.position0),n.position1.setVec(s,a.position1),n.componentIndex.set(s,a.componentIndex),n.variantOffset.set(s,i),n.variantStroke.set(s,u),n.variantExtension.set(s,d)}};const L=new Float32Array(6),E=new Uint32Array(L.buffer),P=new Uint32Array(1);function Dt(t){return L[0]=t.position0[0],L[1]=t.position0[1],L[2]=t.position0[2],L[3]=t.position1[0],L[4]=t.position1[1],L[5]=t.position1[2],P[0]=31*(31*(31*(31*(31*(166811+E[0])+E[1])+E[2])+E[3])+E[4])+E[5],P[0]}function Ft(t){const n=L;n[0]=B(t.position0[0]),n[1]=B(t.position0[1]),n[2]=B(t.position0[2]),n[3]=B(t.position1[0]),n[4]=B(t.position1[1]),n[5]=B(t.position1[2]),P[0]=5381;for(let s=0;s<E.length;s++)P[0]=31*P[0]+E[s];return P[0]}const rt=1e4;function B(t){return Math.round(t*rt)/rt}function Tt(t,n){return Math.abs(t)**n*Math.sign(t)}class J{constructor(){this._commonWriter=new ht}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return X.createBuffer(n)}write(n,s,a){this._commonWriter.write(n,s,a),Nt(M,a.faceNormal0,a.faceNormal1),ut(M,M);const{typedBuffer:i,typedBufferStride:u}=n.normalCompressed;K(i,s,M[0],M[1],M[2],u)}}J.Layout=X,J.glLayout=gt(X,1);class Q{constructor(){this._commonWriter=new ht}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return G.createBuffer(n)}write(n,s,a){this._commonWriter.write(n,s,a);{const{typedBuffer:i,typedBufferStride:u}=n.normalCompressed;K(i,s,a.faceNormal0[0],a.faceNormal0[1],a.faceNormal0[2],u)}{const{typedBuffer:i,typedBufferStride:u}=n.normal2Compressed;K(i,s,a.faceNormal1[0],a.faceNormal1[1],a.faceNormal1[2],u)}}}Q.Layout=G,Q.glLayout=gt(G,1);const M=A(),j=new At;function Ut(t){const n=mt(t.data,t.skipDeduplicate,t.indices,t.indicesLength);return it.updateSettings(t.writerSettings),ct.updateSettings(t.writerSettings),bt(n,it,ct)}function mt(t,n,s,a){if(n){const p=at(s,a,t.count);return new Wt(s,a,p,t)}const i=xt(t.buffer,t.stride/4,{originalIndices:s}),u=at(i.indices,a,i.uniqueCount);return{faces:i.indices,facesLength:i.indices.length,neighbors:u,vertices:St.createView(i.buffer)}}class Wt{constructor(n,s,a,i){this.faces=n,this.facesLength=s,this.neighbors=a,this.vertices=i}}const it=new J,ct=new Q,jt=pt().vec3f(D.POSITION0).vec3f(D.POSITION1),kt=pt().vec3f(D.POSITION0).vec3f(D.POSITION1).u16(D.COMPONENTINDEX),Rt=Object.freeze(Object.defineProperty({__proto__:null,extract:Ut,extractComponentsEdgeLocationsLayout:kt,extractEdgeInformation:mt,extractEdgeLocationsLayout:jt},Symbol.toStringTag,{value:"Module"}));export{Q as N,jt as d,Rt as e,Ut as f,kt as m,bt as p,mt as u,J as w};
