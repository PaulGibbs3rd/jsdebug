import{kL as k,ch as N,c2 as E,ah as I,H as U,i8 as f,lE as J,jD as W,c5 as D,aA as X,ek as Y,b as t,m as i,c as R,mO as H,mP as L,ab as Q,mQ as V,mR as z,a6 as A,a7 as G,mS as Z,a9 as B,a8 as M,D as K,F as ee,S as te,ao as T,mT as x,mU as re,c7 as C,iJ as ie,ap as se,kM as ae,aV as c,O as oe,al as ne,iD as le,am as pe,kO as ue,mW as de,mX as ye,mY as ce,ih as me,an as h,ng as he,kQ as fe,gX as ge,kP as we,m_ as ve,m$ as Fe,T as Oe}from"./index-CzvLtnX1.js";import{y as be,u as xe}from"./clientSideDefaults-CPaCyHtW.js";import{v as Se,W as Ie,z as Re,Y as Te,S as Ce}from"./wfsUtils-0m9a6bOJ.js";import{c as Pe}from"./AttributeBinsFeatureSet-BHhVaxs1.js";import"./QueryEngineCapabilities-B_pTbIiR.js";import"./geojson-BBbbR4XW.js";import"./date-DCujAECq.js";import"./xmlUtils-CtUoQO7q.js";let u=class extends k{constructor(){super(...arguments),this._connection=null,this._workerHandler=null,this.capabilities=be(!1,!1),this.type="wfs",this.refresh=N(async()=>{await this.load();const e={customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount},{extent:r}=await this._workerHandler.refresh(e);return r&&(this.sourceJSON.extent=r),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:r})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null,this._workerHandler=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,r={}){const a=await this.queryFeaturesJSON(e,r);return E.fromJSON(a)}async queryFeaturesJSON(e,r={}){return await this.load(r),this._workerHandler.queryFeatures(e?e.toJSON():void 0,r)}async queryFeatureCount(e,r={}){return await this.load(r),this._workerHandler.queryFeatureCount(e?e.toJSON():void 0,r)}async queryObjectIds(e,r={}){return await this.load(r),this._workerHandler.queryObjectIds(e?e.toJSON():void 0,r)}async queryExtent(e,r={}){await this.load(r);const a=await this._workerHandler.queryExtent(e?e.toJSON():void 0,r);return{count:a.count,extent:I.fromJSON(a.extent)}}async querySnapping(e,r={}){return await this.load(r),this._workerHandler.querySnapping(e,r)}async queryAttributeBins(e,r={}){await this.load(r);const a=await this._workerHandler.queryAttributeBins(e?.toJSON(),r);return Pe.fromJSON(a)}async _createLoadOptions(e){const{url:r,customParameters:a,name:n,namespaceUri:l,fields:o,geometryType:d,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,swapXY:v}=this.layer,m=this.layer.originOf("spatialReference")==="defaults"?void 0:this.layer.spatialReference;if(!r)throw new U("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await Se(r,{customParameters:a,...e}));const P=["fields","geometryType","name","namespaceUri","swapXY"].some(F=>this.layer[F]==null),p=P?await Ie(this.wfsCapabilities,n,l,{spatialReference:m,customParameters:a,signal:e?.signal}):{...Re(o??[]),geometryType:d,name:n,namespaceUri:l,spatialReference:m,swapXY:v},$=Te(this.wfsCapabilities.readFeatureTypes(),p.name,p.namespaceUri),j=f.toJSON(p.geometryType),{operations:b}=this.wfsCapabilities,q=b.GetFeature.url,_=b.GetFeature.outputFormat;return{customParameters:a,featureType:$,fields:p.fields?.map(F=>F.toJSON())??[],geometryField:p.geometryField,geometryType:j,getFeatureUrl:q,getFeatureOutputFormat:_,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,objectIdField:p.objectIdField,spatialReference:p.spatialReference?.toJSON(),swapXY:!!p.swapXY}}async _startWorker(e){const[r,a]=await J([this._createLoadOptions(e),W("WFSSourceWorker",{...e,strategy:D("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),n=r.error||a.error||null,l=a.value||null;if(n)throw l&&l.close(),n;const o=r.value;this._connection=a.value,this._workerHandler=this._connection.createInvokeProxy();const d=await this._workerHandler.load(o,e);for(const y of d.warnings)X.getLogger(this.layer).warn("#load()",`${y.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:y});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:Y},extent:d.extent,fields:o.fields,geometryType:o.geometryType,objectIdField:o.objectIdField,geometryField:o.geometryField,drawingInfo:xe(o.geometryType),name:o.featureType.title,wfsInfo:{name:o.featureType.name,featureUrl:o.getFeatureUrl,maxFeatures:o.maxRecordCount,swapXY:o.swapXY,supportedSpatialReferences:o.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:o.featureType.namespaceUri}}}};t([i()],u.prototype,"capabilities",void 0),t([i({constructOnly:!0})],u.prototype,"layer",void 0),t([i()],u.prototype,"sourceJSON",void 0),t([i()],u.prototype,"type",void 0),t([i()],u.prototype,"wfsCapabilities",void 0),u=t([R("esri.layers.graphics.sources.WFSSource")],u);var O;const S=ue();let s=O=class extends H(L(Q(V(z(A(G(Z(B(M(K(ee(te(oe))))))))))))){static fromWFSLayerInfo(e){const{customParameters:r,fields:a,geometryField:n,geometryType:l,name:o,namespaceUri:d,objectIdField:y,spatialReference:g,swapXY:w,url:v,wfsCapabilities:m}=e;return new O({customParameters:r,fields:a,geometryField:n,geometryType:l,name:o,namespaceUri:d,objectIdField:y,spatialReference:g,swapXY:w,url:v,wfsCapabilities:m})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxRecordCount=3e3,this.maxPageCount=10,this.maxTotalRecordCount=2e5,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new u({layer:this}),this.spatialReference=T.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),x(this.renderer,this.fieldsIndex),re(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,r,a){const n=e.filter(l=>l.name!==Ce);this.geometryField&&n.unshift(new C({name:this.geometryField,alias:this.geometryField,type:"geometry"})),ie(a,n.map(l=>l.toJSON()),r)}get parsedUrl(){return se(this.url)}set renderer(e){x(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return ae(this,e)}createQuery(){const e=new c({returnGeometry:!0,outFields:["*"],where:this.definitionExpression||"1=1"}),{timeOffset:r,timeExtent:a}=this;return e.timeExtent=r!=null&&a!=null?a.offset(-r.value,r.unit):a||null,e}getFieldDomain(e,r){return this.getField(e)?.domain}getField(e){return this.fieldsIndex?.get(e)}queryFeatures(e,r){return this.load().then(()=>this.source.queryFeatures(c.from(e)||this.createQuery(),r)).then(a=>{if(a?.features)for(const n of a.features)n.layer=n.sourceLayer=this;return a})}queryObjectIds(e,r){return this.load().then(()=>this.source.queryObjectIds(c.from(e)||this.createQuery(),r))}queryFeatureCount(e,r){return this.load().then(()=>this.source.queryFeatureCount(c.from(e)||this.createQuery(),r))}queryExtent(e,r){return this.load().then(()=>this.source.queryExtent(c.from(e)||this.createQuery(),r))}async hasDataChanged(){try{const{dataChanged:e,updates:r}=await this.source.refresh();return r!=null&&this.read(r,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};t([i({readOnly:!0})],s.prototype,"capabilities",null),t([i({type:String})],s.prototype,"copyright",void 0),t([i({readOnly:!0})],s.prototype,"createQueryVersion",null),t([i({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],s.prototype,"customParameters",void 0),t([i(ne("dateFieldsTimeReference"))],s.prototype,"dateFieldsTimeZone",void 0),t([i({readOnly:!0})],s.prototype,"defaultPopupTemplate",null),t([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),t([i({type:String})],s.prototype,"displayField",void 0),t([i(le)],s.prototype,"elevationInfo",void 0),t([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"featureUrl",void 0),t([i({type:[C],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],s.prototype,"fields",void 0),t([pe("fields")],s.prototype,"writeFields",null),t([i(S.fieldsIndex)],s.prototype,"fieldsIndex",void 0),t([i({type:I,json:{name:"extent"}})],s.prototype,"fullExtent",void 0),t([i()],s.prototype,"geometryField",void 0),t([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:f.read},write:{target:"layerDefinition.geometryType",writer:f.write,ignoreOrigin:!0},origins:{service:{read:f.read}}}})],s.prototype,"geometryType",void 0),t([i({type:String})],s.prototype,"id",void 0),t([i(de)],s.prototype,"labelsVisible",void 0),t([i({type:[ce],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ye},write:!0}})],s.prototype,"labelingInfo",void 0),t([i(me)],s.prototype,"legendEnabled",void 0),t([i({type:["show","hide"]})],s.prototype,"listMode",void 0),t([i({type:String})],s.prototype,"objectIdField",void 0),t([i({type:["WFS"]})],s.prototype,"operationalLayerType",void 0),t([i({type:h,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"maxRecordCount",void 0),t([i({type:h})],s.prototype,"maxPageCount",void 0),t([i({type:h})],s.prototype,"maxTotalRecordCount",void 0),t([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],s.prototype,"mode",void 0),t([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"name",void 0),t([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"namespaceUri",void 0),t([i(he)],s.prototype,"opacity",void 0),t([i(S.outFields)],s.prototype,"outFields",void 0),t([i({readOnly:!0})],s.prototype,"parsedUrl",null),t([i(fe)],s.prototype,"popupEnabled",void 0),t([i({type:ge,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),t([i({types:ve,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:we,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],s.prototype,"renderer",null),t([i(Fe)],s.prototype,"screenSizePerspectiveEnabled",void 0),t([i({readOnly:!0})],s.prototype,"source",void 0),t([i({type:T,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],s.prototype,"spatialReference",void 0),t([i({readOnly:!0,type:[h],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"spatialReferences",void 0),t([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"swapXY",void 0),t([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],s.prototype,"title",void 0),t([i({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),t([i(Oe)],s.prototype,"url",void 0),t([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"version",void 0),t([i()],s.prototype,"wfsCapabilities",null),s=O=t([R("esri.layers.WFSLayer")],s);const Je=s;export{Je as default};
