import{bf as n,ak as d,aA as l,aP as c,gO as u,aU as p,d as _,b as o,m,c as f}from"./index-CfYeSufM.js";import{r as y}from"./BitmapContainer-DldF9ekB.js";import{S as H}from"./LayerView2D-C4Cdeea2.js";import{A as w}from"./GraphicsView2D-D4npPHfS.js";import{h as v}from"./HighlightGraphicContainer-DYBGO2A6.js";import{_ as x}from"./ExportStrategy-CzGpn-Hk.js";import{y as U}from"./LayerView-Ck8FMSD2.js";import{i as b}from"./MapImageLayerView-CVpZmu-2.js";import{i as G}from"./RefreshableLayerView-Bu3cytnU.js";import{S}from"./MapServiceLayerViewHelper-DgULpklP.js";import{r as $}from"./drapedUtils-DkjinvLd.js";import"./WGLContainer-DAL2R1TP.js";import"./Utils-TBp02Upz.js";import"./BoundingBox-hvRvsOsN.js";import"./WGLBrushVTLSymbol-D4Azmvhv.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-CbnhisJb.js";import"./Container-Cz9A_ioc.js";import"./EffectView-Jcs4MyZ6.js";import"./BitmapTechnique-DOPe8KAY.js";import"./GraphShaderModule-rlKkNXTl.js";import"./TechniqueType-uMFRS8dR.js";import"./CIMSymbolHelper-DLCfSN7J.js";import"./BidiEngine-QXap_35O.js";import"./rasterizingUtils-DzQCuzrR.js";import"./Rect-CUzevAry.js";import"./OverrideHelper-2qszNNyl.js";import"./callExpressionWithFeature-B3Mz5oa9.js";import"./AttributeStore-B7dEZ_45.js";import"./UpdateTracking2D-BGJ5gcc8.js";import"./queryUtils-DtT3aDWa.js";import"./json-Wa8cmqdu.js";import"./timeSupport-bCcjezcf.js";import"./TimeOnly-DNvrMvt4.js";import"./FeatureCommandQueue-DEjbHgMN.js";import"./heatmapTextureUtils-BwsdgbXL.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-w0BYbTZ1.js";import"./normalizeUtilsSync-h4KLBvMC.js";import"./AGraphicContainer-CVpmy9ro.js";import"./TechniqueInstance-suOgeU_P.js";import"./TileContainer-aWWjUWr5.js";import"./ExportImageParameters-BX_m3R7l.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils--mHU41N0.js";import"./timeSupport-BAwZ8uOa.js";import"./popupUtils-DB8vJbLy.js";let h=class extends b(G(H(U))){constructor(){super(...arguments),this._highlightGraphics=new n,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{d(e)||l.getLogger(this).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,r=e>=10.3,g=e>=10;this._bitmapContainer=new y,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new S({createFetchPopupFeaturesQueryGeometry:(a,s)=>$(a,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(a,s)=>{this._highlightView.graphicUpdateHandler({graphic:a,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new x({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:r,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(c(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,r){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}fetchImageBitmap(t,i,e,r){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...r})}highlight(t,i){const e=u(t);if(e.length===0)return p();const r=(i==null?void 0:i.name)??_;return this._addHighlightGraphics(e,r),p(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}};o([m()],h.prototype,"strategy",void 0),o([m()],h.prototype,"updating",void 0),h=o([f("esri.views.2d.layers.MapImageLayerView2D")],h);const vt=h;export{vt as default};
