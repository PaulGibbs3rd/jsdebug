import{ls as c,lt as q,bu as m,bz as b,bt as v,gw as y,lu as C,lv as R,lw as j,g0 as k,lx as w,ly as x,lz as z}from"./index-CzvLtnX1.js";import{geodesicArea as A}from"./geometryEngine-CfNZEGqf.js";import{v as M}from"./geodesicUtils-C0S8HwBT.js";import{r as W}from"./geodesicLengthMeasurementUtils-1KCptDKk.js";import{l as D}from"./quantityFormatUtils-DKqV-Ju2.js";function P(t){const{spatialReference:e}=t;return W(e,F,J,t)}function F(t){return c(Math.abs(M([t],"square-meters")[0]),"square-meters")}function J(t){try{return c(Math.abs(A(t,"square-meters")),"square-meters")}catch{return null}}function Q(t,e=B()){return O(t,e,!1)}function O(t,e,s=t.hasZ){const l=D(t.spatialReference),a=q(l);if(a==null)return null;const $=(u,o)=>!(o.length<2)&&(b(u,o[0],o[1],s&&o[2]||0),!0);let h=0;for(const u of t.rings){const o=u.length;if(o<3)continue;const{positionsWorldCoords:r}=e;for(;r.length<o;)r.push(m());const p=U,i=b(Z,0,0,0),d=1/o;for(let n=0;n<o;n++){if(!$(p,u[n])||!v(p,t.spatialReference,r[n],l))return null;y(i,i,r[n],d)}const g=C(r[0],r[1],i,R());if(j(k(g))===0)continue;for(let n=0;n<o;n++)w(g,i,r[n],r[n]);const f=E(r);for(let n=0;n<f.length;n+=3)h+=x(r[f[n]],r[f[n+1]],r[f[n+2]])}return c(h,a)}const U=m(),Z=m();function B(){return{positionsWorldCoords:[]}}function E(t){return z(G(t),[],2)}function G(t){const e=new Float64Array(2*t.length);for(let s=0;s<t.length;++s){const l=t[s],a=2*s;e[a]=l[0],e[a+1]=l[1]}return e}export{E as U,Q as j,B as k,P as o};
