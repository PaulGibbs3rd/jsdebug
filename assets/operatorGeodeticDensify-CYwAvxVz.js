const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/OperatorGeodeticDensifyByLength-C-zD7Gq4.js","assets/SimpleGeometryCursor-B92kdZ15.js","assets/Transformation2D-CXzB4ZrL.js","assets/ProjectionTransformation-DjNRMbXD.js","assets/index-CzvLtnX1.js"])))=>i.map(i=>d[i]);
import{_ as i,hS as a,hT as s,hU as _}from"./index-CzvLtnX1.js";import{s as c}from"./SimpleGeometryCursor-B92kdZ15.js";let r;function f(){return!!r&&s()}async function p(){if(!f()){const[e,n]=await Promise.all([i(()=>import("./OperatorGeodeticDensifyByLength-C-zD7Gq4.js"),__vite__mapDeps([0,1,2,3,4])),i(()=>import("./ProjectionTransformation-DjNRMbXD.js").then(t=>t.aW),__vite__mapDeps([3,2,1,4])).then(t=>t.aG).then(({injectPe:t})=>t),a()]);r=new e.OperatorGeodeticDensifyByLength,n(_)}}function h(e,n,t,o){return r.execute(e,n,t,o,null)}function y(e,n,t,o){const u=r.executeMany(new c(e),n,t,o,null);return Array.from(u)}function P(){return r.supportsCurves()}export{P as a,y as c,p as i,f as s,h as u};
