const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ViewshedAnalysisView3D-32-txqMS.js","assets/index-CzvLtnX1.js","assets/featureReferenceUtils-Bk8cvZgN.js","assets/AnalysisView3D-BKZHpM3V.js","assets/LineVisualElement-Dmig6oYe.js","assets/line-sE7VsM4I.js","assets/Viewshed-DAXA_m8H.js","assets/ShadedColorMaterial.glsl-ftyccgmu.js","assets/ColorMaterial.glsl-C-PiVLm-.js","assets/TriangleMaterial-DGLj9Hvg.js","assets/dragEventPipeline3D-BgOPl69K.js","assets/InteractiveToolBase-CXcuwHxr.js","assets/EditGeometryOperations-B_ujSqy0.js","assets/geometry2dUtils-C5OK12a_.js","assets/MoveManipulation-B_C3dVDr.js","assets/ExtendedLineVisualElement-Ds1RnamP.js","assets/EngineVisualElement-D9oh89bd.js","assets/LaserlinePath.glsl-7piOlJpM.js","assets/lineStippleUtils-CCavR4OV.js","assets/sliceToolConfig-keiWzNcS.js","assets/analysisViewUtils-LLUt6l8J.js","assets/keybindings-DIxDEOyk.js","assets/ToolIntersector-DI2Et5aL.js"])))=>i.map(i=>d[i]);
import{b as a,m as n,c as w,dr as h,aP as d,aW as V,H as y,fd as c,u,fe as _,az as p,_ as v}from"./index-CzvLtnX1.js";import{l as A}from"./LayerView3D-C3wz0Xd_.js";import{y as f}from"./LayerView-DMEwuW7Q.js";const m=s=>{let e=class extends s{constructor(...i){super(...i),this.layer=null}get interactive(){return this.analysisView!=null&&this.analysisView.interactive}set interactive(i){this.analysisView!=null&&(this.analysisView.interactive=i)}get selectedViewshed(){return this.analysisView!=null?this.analysisView.selectedViewshed:null}set selectedViewshed(i){this.analysisView!=null&&(this.analysisView.selectedViewshed=i)}async createViewsheds(i){if(this.analysisView==null)throw h();await this.analysisView.createViewsheds(i)}};return a([n()],e.prototype,"layer",void 0),a([n()],e.prototype,"interactive",null),a([n()],e.prototype,"selectedViewshed",null),e=a([w("esri.views.layers.ViewshedLayerView")],e),e},o="analysis-view-handles";let l=class extends A(m(f)){constructor(s){super(s),this.type="viewshed-3d",this._analysisModule=null}initialize(){this.addHandles(d(()=>this.layer.source,s=>{this._destroyAnalysisView(),s!=null&&this._createAnalysisView(s)},V),o)}destroy(){this.removeHandles(o),this._destroyAnalysisView()}async whenAnalysisView(){if(this.analysisView!=null)return this.analysisView;if(this._createAnalysisViewTask!=null)return this._createAnalysisViewTask.promise;throw new y("layerview:no-analysisview-for-analysis","The analysis has not been set on the ViewshedLayer of this layer view")}isUpdating(){return this._createAnalysisViewTask!=null||this.analysisView!=null&&this.analysisView.updating}_createAnalysisView(s){const e=c(async t=>(this.analysisView=await this._createAnalysisViewPromise(s,t),this._createAnalysisViewTask===e&&(this._createAnalysisViewTask=null),this.analysisView));this.addResolvingPromise(e.promise),this._createAnalysisViewTask=e}_destroyAnalysisView(){this.analysisView=u(this.analysisView),this._createAnalysisViewTask=_(this._createAnalysisViewTask)}async _createAnalysisViewPromise(s,e){let t=this._analysisModule;if(t==null){const r=await this._loadAnalysisModule();this._analysisModule=r,t=r}const i=new t.default({analysis:s,view:this.view,parent:this});if(await i.when(),p(e)){i.destroy();const r=this.layer.source;throw r!=null&&s!==r?h("Source has changed during creation."):new y("layerview:no-analysisview-for-analysis","The analysis has not been added to the ViewshedLayer of this layer view",{analysis:s})}return i}_loadAnalysisModule(){return v(()=>import("./ViewshedAnalysisView3D-32-txqMS.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]))}};a([n()],l.prototype,"type",void 0),a([n()],l.prototype,"analysisView",void 0),a([n()],l.prototype,"_createAnalysisViewTask",void 0),l=a([w("esri.views.3d.layers.ViewshedLayerView3D")],l);const P=l;export{P as default};
