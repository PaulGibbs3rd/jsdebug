const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/WhereClause-D7Picv4q.js","assets/index-CzvLtnX1.js","assets/TimeOnly-DUjwkvaH.js"])))=>i.map(i=>d[i]);
import{tx as R,ty as U,rK as j,bz as D,bu as A,g as H,nm as W,m0 as k,aP as y,aQ as V,b as s,m as a,c as S,P as v,h7 as J,aU as L,j as q,gF as G,h as N,ch as Z,fe as K,gu as Q,b0 as $,ib as B,i8 as X,qk as Y,av as ee,iL as te,b$ as ie,nl as ne,c0 as se,N as P,ex as re,j$ as ae,eU as h,jM as C,aW as M,tz as oe,fd as le,_ as de}from"./index-CzvLtnX1.js";import{t as ue}from"./memoize-DmxaQ-k8.js";import{u as pe}from"./SnappingManager-DEKGuS80.js";import{o as he,i as ce}from"./queryEngineUtils-DIzSkEj0.js";import{d as ye}from"./TileTreeDebugger-DS28bFpU.js";import"./keybindings-DIxDEOyk.js";import"./geodesicUtils-C0S8HwBT.js";import"./geometry2dUtils-C5OK12a_.js";import"./viewUtils-D5G6nsnP.js";import"./VertexSnappingCandidate-e6jTOPuj.js";import"./PointSnappingHint-Dmq3EHae.js";function O(e,t){return U(t.extent,E),R(E,D(fe,e.x,e.y,0))}const E=j(),fe=A();let c=class extends H{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((i,r)=>O(t,i)-O(t,r)),e}_scaleEnabled(){return W(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,r=[];for(const{row:n,colFrom:o,colTo:l}of e)for(let w=o;w<=l;w++){const m=t.normalizeCol(w),f=new k(null,i,n,m);this.tileInfo.updateTileInfo(f),r.push(f)}return r}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(y(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),V))}};s([a({readOnly:!0})],c.prototype,"tiles",null),s([a({readOnly:!0})],c.prototype,"_scaleEnabled",null),s([a({readOnly:!0})],c.prototype,"tilesCoveringView",null),s([a({readOnly:!0})],c.prototype,"tileInfo",null),s([a({readOnly:!0})],c.prototype,"tileSize",null),s([a({constructOnly:!0})],c.prototype,"view",void 0),s([a({constructOnly:!0})],c.prototype,"layer",void 0),s([a()],c.prototype,"pointOfInterest",void 0),c=s([S("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],c);let g=class extends H{get _sortedTilesCoveringView(){const t=(this.view.featureTiles?.tiles?.toArray()??[]).map(ge),i=this._effectivePointOfInterest;return i!=null&&t.sort((r,n)=>O(i,r)-O(i,n)),t}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const t=this.pointOfInterest;return t??this.view.pointsOfInterest?.focus.location}constructor(t){super(t),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([y(()=>this.view.featureTiles,t=>{this.removeHandles(z),t&&this.addHandles(t.addClient(),z)},v),y(()=>this._sortedTilesCoveringView,t=>this._set("tiles",t),{initial:!0,equals:(t,i)=>J(t,i,(r,n)=>r.id===n.id)})])}};function ge({lij:[e,t,i],extent:r}){return new k(`${e}/${t}/${i}`,e,t,i,r)}s([a({readOnly:!0})],g.prototype,"tiles",void 0),s([a({readOnly:!0})],g.prototype,"_sortedTilesCoveringView",null),s([a({readOnly:!0})],g.prototype,"tileInfo",null),s([a({readOnly:!0})],g.prototype,"tileSize",null),s([a({constructOnly:!0})],g.prototype,"view",void 0),s([a()],g.prototype,"pointOfInterest",void 0),s([a()],g.prototype,"_effectivePointOfInterest",null),g=s([S("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],g);const z="feature-tiles";let b=class extends ye{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(L(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(n=>{e.set(n.data.id,n.featureCount)}),this._debugInfo.pendingTiles.forEach(n=>{e.set(n.data.id,n.featureCount),t.set(n.data.id,n.state)});const i=n=>{const o=t.get(n),l=e.get(n)??"?";return o?`${o}:${l}
${n}`:`store:${l}
${n}`},r=new Map;return this._debugInfo.storedTiles.forEach(n=>{r.set(n.data.id,n.data)}),this._debugInfo.pendingTiles.forEach(n=>{r.set(n.data.id,n.data)}),Array.from(r.values()).map(n=>({lij:[n.level,n.row,n.col],level:n.level,geometry:q.fromExtent(G(n.extent,this.view.spatialReference)),label:i(n.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};s([a({constructOnly:!0})],b.prototype,"handle",void 0),b=s([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],b);let p=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new N,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:r}of t.pointsInFeatures)for(const{z:n}of r)i.push(n);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=Z(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=K(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new _e(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const i=we(e.layer);if(i==null)return;const r={configuration:x(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",r,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=x(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:r,coordinateHelper:n}=e,o={...e,point:Q(i[0],i[1],i[2],n.spatialReference.toJSON()),filter:r?.toJSON()};return this._workerHandle.invoke(o,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:r},n){const o={historicMoment:e,addedFeatures:t?.map(({objectId:l})=>l).filter($)??[],deletedFeatures:i?.map(({objectId:l,globalId:w})=>({objectId:l,globalId:w}))??[],updatedFeatures:r?.map(({objectId:l})=>l).filter($)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",o,n)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},n))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function x(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function we(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:X.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}s([a({constructOnly:!0})],p.prototype,"schedule",void 0),s([a({constructOnly:!0})],p.prototype,"hasZ",void 0),s([a({constructOnly:!0})],p.prototype,"elevationAlignPointsInFeatures",void 0),s([a({constructOnly:!0})],p.prototype,"queryForSymbologySnapping",void 0),s([a({readOnly:!0})],p.prototype,"updating",null),s([a({readOnly:!0})],p.prototype,"availability",void 0),s([a()],p.prototype,"_workerHandleUpdating",void 0),p=s([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],p);class _e extends B{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let _=class extends H{get tiles(){return[new k("0/0/0",0,0,0,Y(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new ee({origin:new ie({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new te({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};s([a({readOnly:!0})],_.prototype,"tiles",null),s([a({readOnly:!0})],_.prototype,"tileInfo",null),s([a({readOnly:!0})],_.prototype,"tileSize",null),s([a({constructOnly:!0})],_.prototype,"layer",void 0),s([a()],_.prototype,"pointOfInterest",void 0),_=s([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],_);let d=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return ne(this._layer)&&!this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible)?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:r}=i,{fieldsIndex:n,timeInfo:o,floorInfo:l,subtypeField:w}=r,m=t&&"filter"in t?t.filter:null,f=m?.where&&m.where!=="1=1"?this._getOrLoadWhereFields(m.where,n):[];if(m?.timeExtent&&o){const{startField:u,endField:I}=o,T=n.get(u)?.name??u,F=n.get(I)?.name??I;T&&f.push(T),F&&f.push(F)}if(e?.map&&pe(e.map)&&e.map.utilityNetworks?.find(u=>u.isUtilityLayer(r))){const u=r.fieldsIndex.get("assetGroup")?.name,I=r.fieldsIndex.get("assetType")?.name;u&&I&&(f.push(u),f.push(I))}if(r&&l?.floorField&&e?.floors?.length){const u=n.get(l.floorField)?.name??l.floorField;u&&f.push(u)}if(w){const u=n.get(w)?.name??w;u&&f.push(u)}return new Set(f)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,r=e!=null?e.type:"2d",n=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(n.where=se(n.where,this._layerView.effectiveDisplayFilter?.where)),{filter:n,customParameters:t?{...i,token:t}:i,viewType:r}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new N,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=ue(ce)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new _({layer:this._layer}),e=this._workerHandle=new p;else switch(t.type){case"2d":this._tilesOfInterest=new c({view:t,layer:this._layer}),e=this._workerHandle=new p;break;case"3d":{const{resourceController:i}=t,r=this._layer;this._tilesOfInterest=new g({view:t}),e=this._workerHandle=new p({schedule:n=>i.immediate.schedule(n),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(n,o)=>{const l=await t.whenLayerView(r);return P(o),l.elevationAlignPointsInFeatures(n,o)},queryForSymbologySnapping:async(n,o)=>{const l=await t.whenLayerView(r);return P(o),l.queryForSymbologySnapping(n,o)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:n})=>{const{elevationInfo:o}=r;ae(n,o)&&h(e.notifyElevationSourceChange())}),y(()=>r.elevationInfo,()=>h(e.notifyElevationSourceChange()),v),y(()=>this._layerView?.layer?.renderer,()=>h(e.notifySymbologyChange()),v),y(()=>this._layerView?.symbologySnappingSupported??!1,n=>h(e.setSymbologySnappingSupported(n)),v),re(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([C(e)]),h(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>h(e.updateTiles(this._updateTilesParameters,null)),v),this.addHandles([y(()=>this.configuration,i=>h(e.configure(i,null)),V),y(()=>this._layer.historicMoment,i=>h(e.setHistoricMoment(i)),M),y(()=>this._outFields,i=>h(e.updateOutFields(i)),v),y(()=>this._isSuspended,i=>h(e.setSuspended(i)),M)]),t!=null&&this.addHandles(y(()=>oe.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new b({view:t,handle:e}),this.addHandles(C(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},v)),this.addHandles([this.layerSource.layer.on("edits",i=>h(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:r}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(r);const n=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(o=>he(o,n))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const r=le(async()=>{const n=await de(()=>import("./WhereClause-D7Picv4q.js").then(o=>o.W),__vite__mapDeps([0,1,2]));return this._whereModule=n.default,this._whereModule});return this._loadWhereModuleTask=r,this._updatingHandles.addPromise(r.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};s([a({constructOnly:!0})],d.prototype,"spatialReference",void 0),s([a({constructOnly:!0})],d.prototype,"layerSource",void 0),s([a({constructOnly:!0})],d.prototype,"view",void 0),s([a()],d.prototype,"_tilesOfInterest",void 0),s([a({readOnly:!0})],d.prototype,"_updateTilesParameters",null),s([a()],d.prototype,"_layerView",null),s([a()],d.prototype,"_isSuspended",null),s([a({readOnly:!0})],d.prototype,"updating",null),s([a()],d.prototype,"_outFields",null),s([a({readOnly:!0})],d.prototype,"configuration",null),s([a({readOnly:!0})],d.prototype,"availability",null),s([a()],d.prototype,"_loadWhereModuleTask",void 0),s([a()],d.prototype,"_whereModule",void 0),d=s([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],d);export{d as FeatureServiceSnappingSource};
