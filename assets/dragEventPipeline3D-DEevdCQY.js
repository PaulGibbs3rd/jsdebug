import{fO as N,b$ as $,fP as g,fQ as w,fR as m,fS as E,fT as y,fU as S,fV as b,bu as i,fW as D,fM as P,fN as U,fX as H,fY as G,bv as A,fZ as h,f_ as F,fn as M,f$ as R,g0 as k,g1 as q,g2 as T,by as I,g3 as Q,g4 as _,g5 as j,g6 as z}from"./index-CfYeSufM.js";import{w as B}from"./InteractiveToolBase-XZur83Y0.js";function J(n,r){return O(n,()=>r)}function en(n){return O(n,r=>r.plane)}function O(n,r){const t=i(),s=i();let l=!1;return e=>{const o=r(e);if(e.action==="start"){const c=m(e.screenStart,E(y.get())),u=S(n.state.camera,c,x);u!=null&&(l=b(o,u,t))}if(!l)return null;const a=m(e.screenEnd,E(y.get())),d=S(n.state.camera,a,x);return d==null?null:b(o,d,s)?{...e,renderStart:t,renderEnd:s,plane:o,ray:d}:null}}function K(n,r,t=0,s=null,l=null){let e=null;return o=>{if(o.action==="start"&&(e=n.sceneIntersectionHelper.intersectElevationFromScreen(g(o.screenStart.x,o.screenStart.y),r,t,l),e!=null&&s!=null&&!w(e,e,s))||e==null)return null;const a=n.sceneIntersectionHelper.intersectElevationFromScreen(g(o.screenEnd.x,o.screenEnd.y),r,t,l);return a!=null&&(s==null||w(a,a,s))?{...o,mapStart:e,mapEnd:a}:null}}function L(n,r,t,s=null,l=null){return K(n,t,N(r,n,t),s,l)}function tn(n,r,t,s){const l=t.toMap(n.screenStart);return l!=null?L(r,l,t.elevationInfo,s):null}function V(n,r){const t=v,s=C,l=F();n.renderCoordsHelper.worldUpAtPosition(r,t);const e=M(k(l),t,R(s,r,n.state.camera.eye));return M(e,e,t),q(r,e,l)}function rn(n,r,t){let s=null;const l=new B;return l.next(J(n,V(n,r))).next(W(n,r)).next(X(n,t)).next(e=>{e.mapEnd.x=e.mapStart.x,e.mapEnd.y=e.mapStart.y,s=e}),e=>(s=null,l.execute(e),s)}function W(n,r){const t=i(),s=T(r);n.renderCoordsHelper.worldUpAtPosition(r,t);const l=i(),e=i(),o=a=>(R(a,a,r),Q(t,a,a),n.viewingMode==="global"&&T(a)*Math.sign(_(t,a))<.001-s&&R(a,j(a,t,.001),r),z(a,a,r),a);return a=>(a.renderStart=o(I(l,a.renderStart)),a.renderEnd=o(I(e,a.renderEnd)),a)}function sn(n,r){const t=s=>{const l=m(s,E(Y)),e=S(n.state.camera,l,x);if(e==null)return null;const o=h(r,e,v,C);return o==null?void 0:o[0]};return s=>{const l=t(s.screenStart);if(l==null)return null;const e=t(s.screenEnd);return e==null?null:{...s,renderStart:l,renderEnd:e}}}function X(n,r){const t=n.renderCoordsHelper;return s=>{const l=t.fromRenderCoords(s.renderStart,new $({spatialReference:r})),e=t.fromRenderCoords(s.renderEnd,new $({spatialReference:r}));return l!=null&&e!=null?{...s,mapStart:l,mapEnd:e}:null}}var p;function ln(n){let r=null;return t=>{switch(t.action){case"start":r=n.disableDisplay();break;case"end":case"cancel":r!=null&&(r.remove(),r=null)}return t}}function an(n,r=null){const t=P(n.state.viewingMode);t.options.selectionMode=!0,t.options.store=U.MIN,t.options.hud=!1;const s=g(),l={requiresGroundFeedback:!0,enableDraped:!0,exclude:new Set},e=i(),o=r??n.spatialReference,a=c=>{n.map.ground&&n.map.ground.opacity<1?l.exclude.add(H):l.exclude.delete(H),n.sceneIntersectionHelper.intersectIntersectorScreen(m(c,s),t,l);const u=t.results.min;let f;if(u.getIntersectionPoint(e))f=u.intersector===G.TERRAIN?p.GROUND:p.OTHER;else{if(!t.results.ground.getIntersectionPoint(e))return null;f=p.GROUND}return{location:n.renderCoordsHelper.fromRenderCoords(e,new $({spatialReference:o})),surfaceType:f}};let d;return c=>{if(c.action==="start"){const f=a(c.screenStart);d=f!=null?f.location:null}if(d==null)return null;const u=a(c.screenEnd);return(u==null?void 0:u.location)!=null?{...c,mapStart:d,mapEnd:u.location,surfaceType:u.surfaceType}:null}}(function(n){n[n.GROUND=0]="GROUND",n[n.OTHER=1]="OTHER"})(p||(p={}));const Y=A(),v=i(),C=i(),x=D();export{sn as A,an as B,J as C,X as F,rn as G,L as M,tn as N,en as P,ln as z};
