import{d_ as j,d$ as z,ao as C,eO as R,dD as A,b$ as D,eP as G,eQ as S,eR as v,eS as Y,H as O,eT as P}from"./index-CfYeSufM.js";import{$ as V}from"./utils-BhrB4brX.js";import{m as E,B as _}from"./utils-BKnGA3r8.js";let c=null;const L=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function W(e,t,n,i){const r=R(n)?A(n):null,s=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new D(l.geometry);return G(t,a,a),l.geometry=r?k(a,s??0,i[0]):a,l})}function X(e,t=18,n,i,r){const s=new Float64Array(i*r);t=Math.round(P(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const b=S(n);for(const{geometry:p,attributes:F}of e){const{x:y,y:f}=p,g=Math.max(0,y-t),N=Math.max(0,f-t),M=Math.min(r,f+t),w=Math.min(i,y+t),h=+b(F);for(let m=N;m<M;m++)for(let d=g;d<w;d++){const x=m*i+d,I=Y(d-y,m-f,t)*h,u=s[x]+=I;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=L.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:s}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(s||0)}async function ee(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:s,fieldDelimiter:l,fieldInfos:a,timeZone:b}=e,p=i&&(a==null?void 0:a.find(u=>u.name.toLowerCase()===i.toLowerCase())),F=!!p&&j(p),y=!!p&&V(p),f=e.valueExpression,g=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await z();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new C(h.spatialReference)}):null}const x=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const $=u.attributes;let o;if(f){const T=I?{...u,layer:I}:u,U=c.createExecContext(T,d,b);o=c.executeFunction(m,U)}else $&&(o=$[i],r?(o=`${E(o)}${l}${E($[r])}`,s&&(o=`${o}${l}${E($[s])}`)):typeof o=="string"&&n&&(y?o=o?new Date(o).getTime():null:F&&(o=o?q(o):null)));if(g&&typeof o=="number"&&isFinite(o)){const T=$&&parseFloat($[N]);o=_(o,g,T,M)}w.push(o)}),w}function te(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ne(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let s="";return s=i&&r?B(i,r):i||r,s?"("+s+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ie(e,t){if(e&&e.spatialRelationship!=="intersects")return new O(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function re(e,t,n){const i=H({layer:e,fields:t});if(i.length)return new O(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=Q({layer:e,fields:t});return r.length?new O(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function H(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function Q(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{te as F,q as I,ie as M,ne as N,re as T,B as U,ee as b,X as w,W as x};
