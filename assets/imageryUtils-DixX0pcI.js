import{P as c,$ as o}from"./utils-BHpvWYdX.js";import{h3 as p,h5 as u,h6 as i,h4 as g}from"./index-CfYeSufM.js";const y="Image Service",v="imagery-layer-save",f="imagery-layer-save-as",d="imagery-tile-layer-save",h="imagery-tile-layer-save-as",l="WCS",I="wcs-layer-save",T="wcs-layer-save-as";function n(a){var t;if(a.type==="imagery"||a.type==="wcs")return{isValid:!0};const{raster:e}=a,r=(e==null?void 0:e.datasetFormat)==="Function"?(t=e.primaryRasters)==null?void 0:t.rasters[0]:e;return{isValid:(r==null?void 0:r.datasetFormat)==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function m(a){const e=a.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}async function w(a,e){const{parsedUrl:r,title:t,fullExtent:s}=a;e.url=r.path,e.title||(e.title=t);try{e.extent=await p(s)}catch{e.extent=void 0}u(e,i.METADATA),g(e,i.TILED_IMAGERY,a.type==="imagery-tile")}async function E(a,e){const r=a.type==="imagery"?v:a.type==="imagery-tile"?d:I,t=a.type==="wcs"?l:y;return c({layer:a,itemType:t,validateLayer:n,createItemData:m,errorNamePrefix:r},e)}async function P(a,e,r){const t=a.type==="imagery"?f:a.type==="imagery-tile"?h:T,s=a.type==="wcs"?l:y;return o({layer:a,itemType:s,validateLayer:n,createItemData:m,errorNamePrefix:t,newItem:e,setItemProperties:w},r)}export{E as save,P as saveAs};
