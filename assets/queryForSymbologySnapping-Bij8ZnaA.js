import{ao as $,la as O,lb as P,N as D,gu as q,lc as E,ld as G,le as N,lf as A,lg as B,bu as H,d$ as J}from"./index-CzvLtnX1.js";async function W(t,l,d,b,o){const{elevationProvider:p,renderCoordsHelper:i}=t,{elevationInfo:u}=l,{pointsInFeatures:m,spatialReference:f}=b,g=$.fromJSON(f),h=O(u,!0),y=await P(h,g,o);D(o);const c=[],e=new Set,s=new Set,a=new E,n=q(0,0,0,$.WGS84),r=new B,S=H();n.spatialReference=g;const j=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:w,points:v}of m){const I=d(w);if(I==null){for(const R of v)c.push(R.z??0);e.add(w);continue}I.isDraped&&s.add(w);const z=I.graphic.geometry;a.setFromElevationInfo(G(z,u)),a.updateFeatureExpressionInfoContext(y,I.graphic,l);for(const{x:R,y:C,z:F}of v)n.x=R,n.y=C,n.z=F??0,await N(n,S,j,0,{signal:o}),A(S,p,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function k(t,l,d){if(t==null||l.candidates.length===0)return x;const b=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],p=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?J():null,m=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await u,r=await t.getRenderingInfoAsync(s,i,n,{signal:d});return r==null?[]:a.queryForSnapping(e,g,r,d)},{candidates:f,spatialReference:g}=l;for(let e=0;e<f.length;++e){const s=f[e],{objectId:a}=s,n=typeof a=="number"?b?.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(m(s,n)),p.push(e))}if(o.length===0)return x;const h=await Promise.all(o);D(d);const y=[],c=[];for(let e=0;e<h.length;++e){const s=h[e],a=p[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{W as l,k as r};
